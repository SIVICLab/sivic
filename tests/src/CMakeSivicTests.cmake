# 
#   Copyright © 2009-2014 The Regents of the University of California.
#   All Rights Reserved.
# 
#   Redistribution and use in source and binary forms, with or without
#   modification, are permitted provided that the following conditions are met:
#   •   Redistributions of source code must retain the above copyright notice,
#       this list of conditions and the following disclaimer.
#   •   Redistributions in binary form must reproduce the above copyright notice,
#       this list of conditions and the following disclaimer in the documentation
#       and/or other materials provided with the distribution.
#   •   None of the names of any campus of the University of California, the name
#       "The Regents of the University of California," or the names of any of its
#       contributors may be used to endorse or promote products derived from this
#       software without specific prior written permission.
# 
#   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
#   ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
#   WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
#   IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
#   INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
#   NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
#   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#   WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
#   OF SUCH DAMAGE.
#

#
#   $URL$
#   $Rev$
#   $Author$
#   $Date$
#
#   Authors:
#       Jason C. Crane, Ph.D.
#       Beck Olson

# For now we will use the linux test results for comparison on all platforms
SET( DEFAULT_TEST_PLATFORM Linux_x86_64 )
ADD_CUSTOM_TARGET( RUN_ALL_TESTS COMMAND ctest )
FUNCTION(ADD_TEST_WITH_TARGETS TEST_NAME)
    ADD_TEST(${TEST_NAME} ${ARGN})
    ADD_CUSTOM_TARGET(${TEST_NAME} COMMAND ctest -R ${TEST_NAME} )
    ADD_CUSTOM_TARGET(${TEST_NAME}_VERBOSE COMMAND ctest -VV -R ${TEST_NAME} )
ENDFUNCTION(ADD_TEST_WITH_TARGETS TEST_NAME)


#############################################################
#   Paths to binary applications and scripts
#############################################################
SET( TEST_SCRIPT_PATH ${CMAKE_SOURCE_DIR}/tests/scripts)
IF(WIN32)
	SET( TEST_BIN_PATH_CMD_LINE ${CMAKE_BINARY_DIR}/applications/cmd_line/src/${PLATFORM})
    SET( DIFF_COMMAND ${GNU_DIFFUTILS_PATH}/bin/diff.exe )
    SET( TEST_PLATFORM Win32 )
ELSE(WIN32)
    if(CLION_BUILD)
        SET( TEST_BIN_PATH_CMD_LINE ${CMAKE_BINARY_DIR}/applications/cmd_line/src)
    else(CLION_BUILD)
        SET( TEST_BIN_PATH_CMD_LINE ${CMAKE_BINARY_DIR}/applications/cmd_line/${PLATFORM})
    endif(CLION_BUILD)
    SET( DIFF_COMMAND diff )
    SET( TEST_PLATFORM "${CMAKE_SYSTEM_NAME}_${CMAKE_SYSTEM_PROCESSOR}" )
ENDIF(WIN32)

SET( DCM_2_XML_COMMAND ${DCMTK_DIR}/bin/dcm2xml )
if(CLION_BUILD)
    SET( TEST_BIN_PATH_TESTS ${CMAKE_BINARY_DIR}/tests/src)
else(CLION_BUILD)
    SET( TEST_BIN_PATH_TESTS ${CMAKE_BINARY_DIR}/tests/${PLATFORM})
endif(CLION_BUILD)


#############################################################
#   Location where output files from individual tests 
#   are written to. 
#############################################################
SET( TEST_RESULTS_ROOT ${SVK_TEST_ROOT}/results_tmp)
file( MAKE_DIRECTORY ${TEST_RESULTS_ROOT} )

#############################################################
#   Flags for diff to avoid errors from minor differences in 
#   paths and rootnames in header files and provenance. 
#############################################################
IF(WIN32)
    # Windows prints expenontial incorrectly so we have to ignore the max/min values for now.
    SET( DIFF_OPT --ignore-matching-lines=SVK_ --ignore-matching-lines=root --ignore-matching-lines=minimum: --exclude=.svn)
ELSE(WIN32)
    SET( DIFF_OPT --ignore-matching-lines=SVK_ --ignore-matching-lines=root --exclude=.svn)
ENDIF(WIN32)
SET( DIFF_OPT_DCM --ignore-matching-lines=UID --ignore-matching-lines="0002,0000" --ignore-matching-lines="0002,0012" --ignore-matching-lines="0002,0013" --ignore-matching-lines="0008,0000" --ignore-matching-lines="0020,0000" --exclude=.svn )
STRING(REPLACE ";" " " DIFF_OPT_DCM_STR "${DIFF_OPT_DCM}")

########################
#   
########################
SET( TEST_NAME INSTANTIATION_TEST_MCHK)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_TESTS}/svkInstantiationTest )

#############################################################
#   Tests are in pairs:
#     - odd tests are calls to svk binaries which can be tested with valgrind
#       for memory checking (dynamic ctest analysis).  Files are generated from  
#       these tests into $(TEST_RESULTS_ROOT).  Even tests check for run-time errors
#       and memory allocation. 
#     - even tests diff result files generated in the odd test against a baseline 
#       file.  Even test check for processing correctness. 
#############################################################

########################
#   24X GE Raw to DDF
########################
SET( TEST_NAME TEST_MCHK_24XPF_2_DDF)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/ge_pfiles/24x)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_gepfile_reader -i ${TEST_CASE_ROOT}/input/24x -o${TEST_RESULTS_PATH}/out -t 2 )

SET( TEST_NAME TEST_24XPF_2_DDF_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}//${TEST_PLATFORM}/out)
SET_TESTS_PROPERTIES(TEST_24XPF_2_DDF_DIFF PROPERTIES DEPENDS TEST_MCHK_24XPF_2_DDF)

########################
#   23X GE Raw to DDF
########################
SET( TEST_NAME TEST_MCHK_23XPF_2_DDF)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/ge_pfiles/23x)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_gepfile_reader -i ${TEST_CASE_ROOT}/input/23x -o${TEST_RESULTS_PATH}/out -t 2 )

SET( TEST_NAME TEST_23XPF_2_DDF_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/${TEST_PLATFORM}/output )
SET_TESTS_PROPERTIES(TEST_23XPF_2_DDF_DIFF PROPERTIES DEPENDS TEST_MCHK_23XPF_2_DDF)

########################
#   20X GE Raw to DDF
########################
SET( TEST_NAME TEST_MCHK_20XPF_2_DDF)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/ge_pfiles/20x)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_file_convert -i ${TEST_CASE_ROOT}/input/20_x_raw -o${TEST_RESULTS_PATH}/out -t 2 )

SET( TEST_NAME TEST_20XPF_2_DDF_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/${DEFAULT_TEST_PLATFORM} )
SET_TESTS_PROPERTIES(TEST_20XPF_2_DDF_DIFF PROPERTIES DEPENDS TEST_MCHK_20XPF_2_DDF)

########################
#   15X GE Raw to DDF
########################
SET( TEST_NAME TEST_MCHK_15XPF_2_DDF)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/ge_pfiles/15x)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_file_convert -i ${TEST_CASE_ROOT}/input/15x_raw -o${TEST_RESULTS_PATH}/out -t 2 )

SET( TEST_NAME TEST_15XPF_2_DDF_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/${DEFAULT_TEST_PLATFORM} )
SET_TESTS_PROPERTIES(TEST_15XPF_2_DDF_DIFF PROPERTIES DEPENDS TEST_MCHK_15XPF_2_DDF)


########################
#   14X GE Raw to DDF
########################
SET( TEST_NAME TEST_MCHK_14XPF_2_DDF)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/ge_pfiles/14x)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_file_convert -i ${TEST_CASE_ROOT}/input/14x_raw -o${TEST_RESULTS_PATH}/out -t 2 )

SET( TEST_NAME TEST_14XPF_2_DDF_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/${DEFAULT_TEST_PLATFORM} )
SET_TESTS_PROPERTIES(TEST_14XPF_2_DDF_DIFF PROPERTIES DEPENDS TEST_MCHK_14XPF_2_DDF)


########################
#   12X GE Raw to DDF
########################
SET( TEST_NAME TEST_MCHK_12XPF_2_DDF)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/ge_pfiles/12x)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_file_convert -i ${TEST_CASE_ROOT}/input/12x_raw -o${TEST_RESULTS_PATH}/out -t 2 )

SET( TEST_NAME TEST_12XPF_2_DDF_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/${DEFAULT_TEST_PLATFORM} )
SET_TESTS_PROPERTIES(TEST_12XPF_2_DDF_DIFF PROPERTIES DEPENDS TEST_MCHK_12XPF_2_DDF)


########################
#   11X GE Raw to DDF
########################
SET( TEST_NAME TEST_MCHK_11XPF_2_DDF)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/ge_pfiles/11x)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_file_convert -i ${TEST_CASE_ROOT}/input/11x_raw -o${TEST_RESULTS_PATH}/out -t 2 )

SET( TEST_NAME TEST_11XPF_2_DDF_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/${DEFAULT_TEST_PLATFORM} )
SET_TESTS_PROPERTIES(TEST_11XPF_2_DDF_DIFF PROPERTIES DEPENDS TEST_MCHK_11XPF_2_DDF)

##################################################################
#   9X GE Raw With Swap to DDF
#
#   NOTE: The input for this test was modified so that rhr.rh_user7 
#         rhr.rh_user8, and rhr.rh_user9 values match the FOV.
#         This test passing does not show that 9x reading is
#         correct for GE Data, but just that the swap logic is
#         returning the expected result.
#
########################
SET( TEST_NAME TEST_MCHK_9XPF_SWAP_DDF)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/ge_pfiles/9x_swap)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_file_convert -i ${TEST_CASE_ROOT}/input/axge_ap -o${TEST_RESULTS_PATH}/out -t 2 )

SET( TEST_NAME TEST_9XPF_SWAP_DDF_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/${DEFAULT_TEST_PLATFORM} )
SET_TESTS_PROPERTIES(TEST_9XPF_SWAP_DDF_DIFF PROPERTIES DEPENDS TEST_MCHK_9XPF_SWAP_DDF)

########################
#   UCSF ddf to UCSF DDF
########################
SET( TEST_NAME TEST_MCHK_DDF_2_DDF)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/ddf_files/ddf_to_ddf)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_file_convert -i ${TEST_CASE_ROOT}/input/20x_1.ddf -o${TEST_RESULTS_PATH}/out -t 2 )

SET( TEST_NAME TEST_DDF_2_DDF_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/${DEFAULT_TEST_PLATFORM} )
SET_TESTS_PROPERTIES(TEST_DDF_2_DDF_DIFF PROPERTIES DEPENDS TEST_MCHK_DDF_2_DDF)


########################
#   DICOM MRI to UCSF IDF 
########################
SET( TEST_NAME TEST_MCHK_DCMMRI_2_IDF)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/DICOM/mri_phantom)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_file_convert -i ${TEST_CASE_ROOT}/input/E0000S4I1.DCM -o${TEST_RESULTS_PATH}/out -t 3 )

SET( TEST_NAME TEST_DCMMRI_2_IDF_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out_1 )
SET_TESTS_PROPERTIES(TEST_DCMMRI_2_IDF_DIFF PROPERTIES DEPENDS TEST_MCHK_DCMMRI_2_IDF)


########################
#   DICOM MRI to DICOM MRI 
########################
SET( TEST_NAME TEST_MCHK_DCMMRI_2_DCMMRI)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/DICOM/mri_phantom)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_file_convert -i ${TEST_CASE_ROOT}/input/E0000S4I1.DCM -o${TEST_RESULTS_PATH}/out.dcm -t 6 )

SET( TEST_NAME TEST_DCMMRI_2_DCMMRI_XML)
ADD_TEST_WITH_TARGETS(${TEST_NAME} ${DCM_2_XML_COMMAND} +M +Wb ${TEST_RESULTS_PATH}/out.dcm ${TEST_RESULTS_PATH}/out.xml ) 
SET_TESTS_PROPERTIES(TEST_DCMMRI_2_DCMMRI_XML PROPERTIES DEPENDS TEST_MCHK_DCMMRI_2_DCMMRI)
   
SET( TEST_NAME TEST_DCMMRI_2_DCMMRI_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME} ${DIFF_COMMAND} ${DIFF_OPT_DCM} -r ${TEST_RESULTS_PATH}/out.xml ${TEST_CASE_ROOT}/out_2/out.xml ) 
SET_TESTS_PROPERTIES(TEST_DCMMRI_2_DCMMRI_DIFF PROPERTIES DEPENDS TEST_DCMMRI_2_DCMMRI_XML)


########################
#   DEID DICOM MRI to DICOM MRI 
########################
SET( TEST_NAME TEST_MCHK_DCMMRI_2_DCMMRI_ANON)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/DICOM/mri_phantom)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_file_convert --deid_type 2 --deid_id ANONYMIZED -i ${TEST_CASE_ROOT}/input/E0000S4I1.DCM -o${TEST_RESULTS_PATH}/out.dcm -t 6 )

SET( TEST_NAME TEST_DCMMRI_2_DCMMRI_ANON_XML)
ADD_TEST_WITH_TARGETS(${TEST_NAME} ${DCM_2_XML_COMMAND} +M +Wb ${TEST_RESULTS_PATH}/out.dcm ${TEST_RESULTS_PATH}/out.xml ) 
SET_TESTS_PROPERTIES(TEST_DCMMRI_2_DCMMRI_ANON_XML PROPERTIES DEPENDS TEST_MCHK_DCMMRI_2_DCMMRI_ANON)
   
SET( TEST_NAME TEST_DCMMRI_2_DCMMRI_ANON_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME} ${DIFF_COMMAND} ${DIFF_OPT_DCM} -r ${TEST_RESULTS_PATH}/out.xml ${TEST_CASE_ROOT}/out_3/out.xml ) 
SET_TESTS_PROPERTIES(TEST_DCMMRI_2_DCMMRI_ANON_DIFF PROPERTIES DEPENDS TEST_DCMMRI_2_DCMMRI_ANON_XML)

########################
#   UCSF IDF to UCSF IDF 
#   int2
########################
SET( TEST_NAME TEST_MCHK_IDF_2_IDF_INT2)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/idf_files/idf_to_idf_int2)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_file_convert -i ${TEST_CASE_ROOT}/input/vol.idf -o${TEST_RESULTS_PATH}/out -t 3 )

SET( TEST_NAME TEST_IDF_2_IDF_INT2_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/${DEFAULT_TEST_PLATFORM} )
SET_TESTS_PROPERTIES(TEST_IDF_2_IDF_INT2_DIFF PROPERTIES DEPENDS TEST_MCHK_IDF_2_IDF_INT2)


########################
#   UCSF IDF to UCSF IDF 
#   real 
########################
SET( TEST_NAME TEST_MCHK_IDF_2_IDF_REAL)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/idf_files/idf_to_idf_real)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_file_convert -i ${TEST_CASE_ROOT}/input/vol.idf -o${TEST_RESULTS_PATH}/out -t 3 )

SET( TEST_NAME TEST_IDF_2_IDF_REAL_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out )
SET_TESTS_PROPERTIES(TEST_IDF_2_IDF_REAL_DIFF PROPERTIES DEPENDS TEST_MCHK_IDF_2_IDF_REAL)


########################
#   VARIAN fdf to UCSF IDF 
########################
SET( TEST_NAME TEST_MCHK_FDF_2_IDF)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/varian/fdf)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_file_convert -i ${TEST_CASE_ROOT}/input/lac.0001.fdf -o${TEST_RESULTS_PATH}/out -t 3 )

SET( TEST_NAME TEST_FDF_2_IDF_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/${DEFAULT_TEST_PLATFORM} )
SET_TESTS_PROPERTIES(TEST_FDF_2_IDF_DIFF PROPERTIES DEPENDS TEST_MCHK_FDF_2_IDF)


########################
#   VARIAN fid to UCSF DDF 
########################
SET( TEST_NAME TEST_MCHK_VARIANFID_2_DDF)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/varian/fid_cs)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_file_convert -i ${TEST_CASE_ROOT}/input/fid -o${TEST_RESULTS_PATH}/out -t 2 )

SET( TEST_NAME TEST_VARIANFID_2_DDF_DIFF )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/${DEFAULT_TEST_PLATFORM} )
SET_TESTS_PROPERTIES(TEST_VARIANFID_2_DDF_DIFF PROPERTIES DEPENDS TEST_MCHK_VARIANFID_2_DDF)


########################
#   GE Signa 5x to UCSF IDF 
########################
SET( TEST_NAME TEST_MCHK_SIGNA5X_2_IDF)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/ge_signa_files/Signa5x)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_file_convert -i ${TEST_CASE_ROOT}/input/E8668S3I1.MR -o${TEST_RESULTS_PATH}/out -t 3 )

SET( TEST_NAME TEST_SIGNA5X_2_IDF_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/${DEFAULT_TEST_PLATFORM} )
SET_TESTS_PROPERTIES(TEST_SIGNA5X_2_IDF_DIFF PROPERTIES DEPENDS TEST_MCHK_SIGNA5X_2_IDF)


########################
#   GE Signa 5x V2 to UCSF IDF 
########################
SET( TEST_NAME TEST_MCHK_SIG5XV2_2_IDF)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/ge_signa_files/Signa5XVersion2)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_file_convert -i ${TEST_CASE_ROOT}/input/E18636S3I1.MR -o${TEST_RESULTS_PATH}/out -t 3 )

SET( TEST_NAME TEST_SIG5XV2_2_IDF_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/${DEFAULT_TEST_PLATFORM} )
SET_TESTS_PROPERTIES(TEST_SIG5XV2_2_IDF_DIFF PROPERTIES DEPENDS TEST_MCHK_SIG5XV2_2_IDF)



########################
#   GE Signa LX2 to UCSF IDF 
########################
SET( TEST_NAME TEST_MCHK_SIGLX2_2_IDF)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/ge_signa_files/SignaLX2)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_file_convert -i ${TEST_CASE_ROOT}/input/E12916S3I1.MR -o${TEST_RESULTS_PATH}/out -t 3 )

SET( TEST_NAME TEST_SIGLX2_2_IDF_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/${DEFAULT_TEST_PLATFORM} )
SET_TESTS_PROPERTIES(TEST_SIGLX2_2_IDF_DIFF PROPERTIES DEPENDS TEST_MCHK_SIGLX2_2_IDF)


########################
#   SIEMENS RDA to DDF
########################
SET( TEST_NAME TEST_MCHK_RDA_2_DDF)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/siemens_rda/sv)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_file_convert -i ${TEST_CASE_ROOT}/input/sample.rda -o${TEST_RESULTS_PATH}/out -t 2 )

SET( TEST_NAME TEST_RDA_2_DDF_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/${DEFAULT_TEST_PLATFORM} )
SET_TESTS_PROPERTIES(TEST_RDA_2_DDF_DIFF PROPERTIES DEPENDS TEST_MCHK_RDA_2_DDF)

SET( TEST_NAME TEST_MCHK_RDA_CSI_2_DDF)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/siemens_rda/csi)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_file_convert -i ${TEST_CASE_ROOT}/input/gaba_on.rda -o${TEST_RESULTS_PATH}/out -t 2 )

SET( TEST_NAME TEST_RDA_CSI_2_DDF_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/output )
SET_TESTS_PROPERTIES(TEST_RDA_CSI_2_DDF_DIFF PROPERTIES DEPENDS TEST_MCHK_RDA_CSI_2_DDF)



########################
#   DICOM MRS to DICOM MRS 
#   only checks the header
########################
SET( TEST_NAME TEST_MCHK_DCMMRS_2_DCMMRS)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/DICOM/mrs)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_file_convert -i ${TEST_CASE_ROOT}/input/mrs.dcm -o${TEST_RESULTS_PATH}/out.dcm -t 4 )

SET( TEST_NAME TEST_DCMMRS_2_DCMMRS_XML)
ADD_TEST_WITH_TARGETS(${TEST_NAME} ${DCM_2_XML_COMMAND} +M +Wb ${TEST_RESULTS_PATH}/out.dcm ${TEST_RESULTS_PATH}/out.xml ) 
SET_TESTS_PROPERTIES(TEST_DCMMRS_2_DCMMRS_XML PROPERTIES DEPENDS TEST_MCHK_DCMMRS_2_DCMMRS)

SET( TEST_NAME TEST_DCMMRS_2_DCMMRS_DIFF )
ADD_TEST_WITH_TARGETS(${TEST_NAME} ${DIFF_COMMAND} ${DIFF_OPT_DCM} -r ${TEST_RESULTS_PATH}/out.xml ${TEST_CASE_ROOT}/${DEFAULT_TEST_PLATFORM}/out.xml)
SET_TESTS_PROPERTIES(TEST_DCMMRS_2_DCMMRS_DIFF PROPERTIES DEPENDS TEST_DCMMRS_2_DCMMRS_XML)


########################
#   PFile Reader Tests: 
########################
SET( TEST_NAME TEST_MCHK_GEPFILE_2_DDF_1)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME}/ )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/ge_pfiles/14x_mbrease)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_gepfile_reader -i ${TEST_CASE_ROOT}/input/mbrease_teavg -o${TEST_RESULTS_PATH}/out -t 2 -as )

SET( TEST_NAME TEST_GEPFILE_2_DDF_1_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out_4 )
SET_TESTS_PROPERTIES(TEST_GEPFILE_2_DDF_1_DIFF PROPERTIES DEPENDS TEST_MCHK_GEPFILE_2_DDF_1)


########################
#   PFile Reader Tests: 
#   this one is too large for valgrind 
#   so turn off MCHK for now:
########################
SET( TEST_NAME TEST_MCHK_GEPFILE_2_DDF_2)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/ge_pfiles/14x_mbrease)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_gepfile_reader -i ${TEST_CASE_ROOT}/input/mbrease_teavg -o${TEST_RESULTS_PATH}/out -t 2 -a -u )

SET( TEST_NAME TEST_GEPFILE_2_DDF_2_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out_6 )
SET_TESTS_PROPERTIES(TEST_GEPFILE_2_DDF_2_DIFF PROPERTIES DEPENDS TEST_MCHK_GEPFILE_2_DDF_2)


########################
#   PFile Reader Tests: 
#   this one is too large for valgrind 
#   so turn off MCHK for now:
########################
SET( TEST_NAME TEST_MCHK_GEPFILE_2_DDF_LAC)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/ge_pfiles/14x_lac_flyback)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_gepfile_reader -i ${TEST_CASE_ROOT}/input/14x_lac_flyback -o${TEST_RESULTS_PATH}/out -t 2  --one_time_pt)

SET( TEST_NAME TEST_GEPFILE_2_DDF_LAC_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out )
SET_TESTS_PROPERTIES(TEST_GEPFILE_2_DDF_LAC_DIFF PROPERTIES DEPENDS TEST_MCHK_GEPFILE_2_DDF_LAC)


########################
#   PFile Anon Tests: 
#   this runs inplace, so make a copy of the input file first
########################
SET( TEST_NAME TEST_MCHK_GEPFILE_ANON )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/ge_pfiles/20x)
file( COPY ${TEST_CASE_ROOT}/input/20_x_raw DESTINATION ${TEST_RESULTS_PATH})
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_gepfile_anon -i ${TEST_RESULTS_PATH}/20_x_raw --deid_id TEST_ANON_ID --study_uid 1.2.3.4 --series_uid 5.6.7.8 )

SET( TEST_NAME TEST_GEPFILE_ANON_CONVERT)
ADD_TEST_WITH_TARGETS(${TEST_NAME} ${TEST_BIN_PATH_CMD_LINE}/svk_file_convert -i ${TEST_RESULTS_PATH}/20_x_raw -o ${TEST_RESULTS_PATH}/20_x_raw.dcm -t4  ) 
SET_TESTS_PROPERTIES(TEST_GEPFILE_ANON_CONVERT PROPERTIES DEPENDS TEST_MCHK_GEPFILE_ANON)

SET( TEST_NAME TEST_GEPFILE_ANON_XML)
ADD_TEST_WITH_TARGETS(${TEST_NAME} ${DCM_2_XML_COMMAND} +M +Wb ${TEST_RESULTS_PATH}/20_x_raw.dcm ${TEST_RESULTS_PATH}/20_x_raw.xml ) 
SET_TESTS_PROPERTIES(TEST_GEPFILE_ANON_XML PROPERTIES DEPENDS TEST_GEPFILE_ANON_CONVERT)

SET( TEST_NAME TEST_GEPFILE_ANON_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT_DCM} -r ${TEST_RESULTS_PATH}/20_x_raw.xml ${TEST_CASE_ROOT}/anon_out/20_x_raw.xml )
SET_TESTS_PROPERTIES(TEST_GEPFILE_ANON_DIFF PROPERTIES DEPENDS TEST_GEPFILE_ANON_XML)


########################
#   Oblique Reslice: 
########################
SET( TEST_NAME TEST_MCHK_OBLIQUE_RESLICE)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/reslicing/axial_to_oblique)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_reslice -i ${TEST_CASE_ROOT}/input/axial_vol.idf --target ${TEST_CASE_ROOT}/input/oblique_mrsvol.ddf -o${TEST_RESULTS_PATH}/out -t 3 )

SET( TEST_NAME TEST_OBLIQUE_RESLICE_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/${TEST_PLATFORM}/out )
SET_TESTS_PROPERTIES(TEST_OBLIQUE_RESLICE_DIFF PROPERTIES DEPENDS TEST_MCHK_OBLIQUE_RESLICE)


SET( TEST_NAME TEST_MCHK_RESAMPLE)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/reslicing/resample)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_reslice -i ${TEST_CASE_ROOT}/input/tjunk_div.idf --target ${TEST_CASE_ROOT}/input/tjunk_div.idf -o${TEST_RESULTS_PATH}/out -t 3 --mx 4 --my 4 )

SET( TEST_NAME TEST_RESAMPLE_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out )
SET_TESTS_PROPERTIES(TEST_RESAMPLE_DIFF PROPERTIES DEPENDS TEST_MCHK_RESAMPLE)

SET( TEST_NAME TEST_MCHK_RESLICE_MATCH_TARGET_RESHAPE_UPSAMPLE )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/reslicing/match_target)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_reslice -i ${TEST_CASE_ROOT}/input/input.idf --target ${TEST_CASE_ROOT}/input/target.idf -o ${TEST_RESULTS_PATH}/match -t 3 -s)

SET( TEST_NAME TEST_RESLICE_MATCH_TARGET_RESHAPE_UPSAMPLE_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH}/match.real ${TEST_CASE_ROOT}/output/match.real )
SET_TESTS_PROPERTIES(TEST_RESLICE_MATCH_TARGET_RESHAPE_UPSAMPLE_DIFF PROPERTIES DEPENDS TEST_MCHK_RESLICE_MATCH_TARGET_RESHAPE_UPSAMPLE)

SET( TEST_NAME TEST_MCHK_RESLICE_MATCH_TARGET_IMAGE_TO_SPEC )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/reslicing/match_target)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_reslice -i ${TEST_CASE_ROOT}/input_2/image.idf --mode 2 --target ${TEST_CASE_ROOT}/input_2/spec.dcm -o ${TEST_RESULTS_PATH}/match -t 3 -s)

SET( TEST_NAME TEST_RESLICE_MATCH_TARGET_IMAGE_TO_SPEC_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH}/ ${TEST_CASE_ROOT}/output_2/ )
SET_TESTS_PROPERTIES(TEST_RESLICE_MATCH_TARGET_IMAGE_TO_SPEC_DIFF PROPERTIES DEPENDS TEST_MCHK_RESLICE_MATCH_TARGET_IMAGE_TO_SPEC)

SET( TEST_NAME TEST_MCHK_RESLICE_MATCH_TARGET_HIGH_TO_LOW_RES )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/reslicing/match_target)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_reslice -i ${TEST_CASE_ROOT}/input_2/image.idf --mode 2 --target ${TEST_CASE_ROOT}/input_2/map.idf -o ${TEST_RESULTS_PATH}/match -t 3 -s)

SET( TEST_NAME TEST_RESLICE_MATCH_TARGET_HIGH_TO_LOW_RES_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH}/ ${TEST_CASE_ROOT}/output_3/ )
SET_TESTS_PROPERTIES(TEST_RESLICE_MATCH_TARGET_HIGH_TO_LOW_RES_DIFF PROPERTIES DEPENDS TEST_MCHK_RESLICE_MATCH_TARGET_HIGH_TO_LOW_RES)

SET( TEST_NAME TEST_MCHK_RESLICE_MATCH_TARGET_LOW_TO_HIGH_RES )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/reslicing/match_target)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_reslice -i ${TEST_CASE_ROOT}/input_2/map.idf --mode 2 --target ${TEST_CASE_ROOT}/input_2/image.idf -o ${TEST_RESULTS_PATH}/match -t 3 -s)

SET( TEST_NAME TEST_RESLICE_MATCH_TARGET_LOW_TO_HIGH_RES_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH}/ ${TEST_CASE_ROOT}/output_4/ )
SET_TESTS_PROPERTIES(TEST_RESLICE_MATCH_TARGET_LOW_TO_HIGH_RES_DIFF PROPERTIES DEPENDS TEST_MCHK_RESLICE_MATCH_TARGET_LOW_TO_HIGH_RES)

SET( TEST_NAME TEST_MCHK_RESLICE_MATCH_TARGET_HIGH_TO_LOW_RES_AXIAL )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/reslicing/match_target)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_reslice -i ${TEST_CASE_ROOT}/input_2/image.idf --mode 2 --target ${TEST_CASE_ROOT}/input_2/image_to_low_res_axial.idf -o ${TEST_RESULTS_PATH}/match -t 3 -s)

SET( TEST_NAME TEST_RESLICE_MATCH_TARGET_HIGH_TO_LOW_RES_AXIAL_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH}/ ${TEST_CASE_ROOT}/output_5/ )
SET_TESTS_PROPERTIES(TEST_RESLICE_MATCH_TARGET_HIGH_TO_LOW_RES_AXIAL_DIFF PROPERTIES DEPENDS TEST_MCHK_RESLICE_MATCH_TARGET_HIGH_TO_LOW_RES_AXIAL)

SET( TEST_NAME TEST_MCHK_RESLICE_MATCH_TARGET_DOTS_ROTATED_TRANSLATED )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/reslicing/match_target)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_reslice -i ${TEST_CASE_ROOT}/input_2/dots.idf --mode 2 --target ${TEST_CASE_ROOT}/input_2/dots_rotated_translated.idf -o ${TEST_RESULTS_PATH}/match -t 3 -s --mode 2)

SET( TEST_NAME TEST_RESLICE_MATCH_TARGET_DOTS_ROTATED_TRANSLATED_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH}/ ${TEST_CASE_ROOT}/output_6/ )
SET_TESTS_PROPERTIES(TEST_RESLICE_MATCH_TARGET_DOTS_ROTATED_TRANSLATED_DIFF PROPERTIES DEPENDS TEST_MCHK_RESLICE_MATCH_TARGET_DOTS_ROTATED_TRANSLATED)

SET( TEST_NAME TEST_MCHK_RESLICE_MATCH_TARGET_DOTS_ASYMMETRIC_TRANSLATED )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/reslicing/match_target)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_reslice -i ${TEST_CASE_ROOT}/input_2/dots.idf --mode 2 --target ${TEST_CASE_ROOT}/input_2/dots_asymmetric.idf -o ${TEST_RESULTS_PATH}/match -t 3 -s --mode 2)

SET( TEST_NAME TEST_RESLICE_MATCH_TARGET_DOTS_ASYMMETRIC_TRANSLATED_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH}/ ${TEST_CASE_ROOT}/output_7/ )
SET_TESTS_PROPERTIES(TEST_RESLICE_MATCH_TARGET_DOTS_ASYMMETRIC_TRANSLATED_DIFF PROPERTIES DEPENDS TEST_MCHK_RESLICE_MATCH_TARGET_DOTS_ASYMMETRIC_TRANSLATED)

SET( TEST_NAME TEST_MCHK_RESLICE_INTERPOLATION_CUBIC )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/reslicing/interpolation)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_reslice -i ${TEST_CASE_ROOT}/input/input.idf --target ${TEST_CASE_ROOT}/input/target.idf -o ${TEST_RESULTS_PATH}/down_cb -t 3 --mode 1 --mx 2 --my 2)

SET( TEST_NAME TEST_MCHK_RESLICE_INTERPOLATION_CUBIC_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH}/down_cb.real ${TEST_CASE_ROOT}/output/down_cb.real )
SET_TESTS_PROPERTIES(TEST_MCHK_RESLICE_INTERPOLATION_CUBIC_DIFF PROPERTIES DEPENDS TEST_MCHK_RESLICE_INTERPOLATION_CUBIC)

SET( TEST_NAME TEST_MCHK_RESLICE_INTERPOLATION_LINEAR )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/reslicing/interpolation)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_reslice -i ${TEST_CASE_ROOT}/input/input.idf --target ${TEST_CASE_ROOT}/input/target.idf -o ${TEST_RESULTS_PATH}/down_ln -t 3 --mode 2 --mx 2 --my 2)

SET( TEST_NAME TEST_MCHK_RESLICE_INTERPOLATION_LINEAR_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH}/down_ln.real ${TEST_CASE_ROOT}/output/down_ln.real )
SET_TESTS_PROPERTIES(TEST_MCHK_RESLICE_INTERPOLATION_LINEAR_DIFF PROPERTIES DEPENDS TEST_MCHK_RESLICE_INTERPOLATION_LINEAR)

SET( TEST_NAME TEST_MCHK_RESLICE_INTERPOLATION_NEAREST )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/reslicing/interpolation)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_reslice -i ${TEST_CASE_ROOT}/input/input.idf --target ${TEST_CASE_ROOT}/input/target.idf -o ${TEST_RESULTS_PATH}/down_nn -t 3 --mode 3 --mx 2 --my 2)

SET( TEST_NAME TEST_MCHK_RESLICE_INTERPOLATION_NEAREST_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH}/down_nn.real ${TEST_CASE_ROOT}/output/down_nn.real )
SET_TESTS_PROPERTIES(TEST_MCHK_RESLICE_INTERPOLATION_NEAREST_DIFF PROPERTIES DEPENDS TEST_MCHK_RESLICE_INTERPOLATION_NEAREST)


########################
#   Metabolite Map Generation
########################
SET( TEST_NAME TEST_MCHK_INTEGRATE_MET_MAP)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/met_maps/integration_pk_ht)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_quantify -s -i ${TEST_CASE_ROOT}/input/mrs.ddf -o ${TEST_RESULTS_PATH}/out -t 3 --peak_center 1.99 --peak_width .4 --peak_name NAA --algo 2)

SET( TEST_NAME TEST_INTEGRATE_MET_MAP_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out )
SET_TESTS_PROPERTIES(TEST_INTEGRATE_MET_MAP_DIFF PROPERTIES DEPENDS TEST_MCHK_INTEGRATE_MET_MAP)

########################
#   svk_zscore
########################
SET( TEST_NAME TEST_MCHK_SVK_ZSCORE )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/svk_zscore )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_zscore --i1 ${TEST_CASE_ROOT}/input/CHO-ht.idf --i2 ${TEST_CASE_ROOT}/input/NAA-ht.idf --spec ${TEST_CASE_ROOT}/input/mc_3T_phantomcomb_1_cor_sum_cor.ddf -t3 -l2 -u4 -o ${TEST_RESULTS_PATH}/out )

SET( TEST_NAME TEST_SVK_ZSCORE_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out )
SET_TESTS_PROPERTIES(TEST_SVK_ZSCORE_DIFF PROPERTIES DEPENDS TEST_MCHK_SVK_ZSCORE )


########################
#   Metabolite Map Generation
########################
SET( TEST_NAME TEST_MCHK_MAG_INTEGRATE_MET_MAP)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/met_maps/integration_pk_ht)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_quantify -i ${TEST_CASE_ROOT}/input/mrs.ddf -o ${TEST_RESULTS_PATH}/out -t 6 --peak_center 1.99 --peak_width .4 --peak_name NAA --algo 5)

SET( TEST_NAME TEST_MAG_INTEGRATE_MET_MAP_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME} perl ${TEST_SCRIPT_PATH}/dcm2xml_series_diff --diff ${DIFF_COMMAND}  -v  --dir_one ${TEST_RESULTS_PATH} --dir_two ${TEST_CASE_ROOT}/out_2 --bin_dir ${DCMTK_DIR}/bin --diff_opts ${DIFF_OPT_DCM_STR} )
SET_TESTS_PROPERTIES(TEST_MAG_INTEGRATE_MET_MAP_DIFF PROPERTIES DEPENDS TEST_MCHK_MAG_INTEGRATE_MET_MAP)

########################
#   Metabolite Map Generation
########################
SET( TEST_NAME TEST_MCHK_PEAK_HT_MET_MAP)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/met_maps/integration_pk_ht)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_quantify -i ${TEST_CASE_ROOT}/input/mrs.ddf -o ${TEST_RESULTS_PATH}/out -t 6 --peak_center 1.99 --peak_width .4 --peak_name NAA --algo 1)

SET( TEST_NAME TEST_PEAK_HT_MET_MAP_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  perl ${TEST_SCRIPT_PATH}/dcm2xml_series_diff --diff ${DIFF_COMMAND} --dir_one ${TEST_RESULTS_PATH} --dir_two ${TEST_CASE_ROOT}/out_3 --bin_dir ${DCMTK_DIR}/bin --diff_opts ${DIFF_OPT_DCM_STR} )
SET_TESTS_PROPERTIES(TEST_PEAK_HT_MET_MAP_DIFF PROPERTIES DEPENDS TEST_MCHK_PEAK_HT_MET_MAP)


########################
#   Metabolite Map Generation
########################
SET( TEST_NAME TEST_MCHK_MAG_PEAK_HT_MET_MAP)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/met_maps/integration_pk_ht)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_quantify -i ${TEST_CASE_ROOT}/input/mrs.ddf -o ${TEST_RESULTS_PATH}/out -t 6 --peak_center 1.99 --peak_width .4 --peak_name NAA --algo 4)

SET( TEST_NAME TEST_MAG_PEAK_HT_MET_MAP_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  perl ${TEST_SCRIPT_PATH}/dcm2xml_series_diff --diff ${DIFF_COMMAND} --dir_one ${TEST_RESULTS_PATH} --dir_two ${TEST_CASE_ROOT}/out_4 --bin_dir ${DCMTK_DIR}/bin --diff_opts ${DIFF_OPT_DCM_STR} )
SET_TESTS_PROPERTIES(TEST_MAG_PEAK_HT_MET_MAP_DIFF PROPERTIES DEPENDS TEST_MCHK_MAG_PEAK_HT_MET_MAP)


########################
#   Metabolite Map Generation
########################
SET( TEST_NAME TEST_MCHK_LINE_WIDTH_MET_MAP)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/met_maps/integration_pk_ht)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_quantify -i ${TEST_CASE_ROOT}/input/mrs.ddf -o ${TEST_RESULTS_PATH}/out -t 6 --peak_center 1.99 --peak_width .4 --peak_name NAA --algo 3)

SET( TEST_NAME TEST_LINE_WIDTH_MET_MAP_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  perl ${TEST_SCRIPT_PATH}/dcm2xml_series_diff --diff ${DIFF_COMMAND} --dir_one ${TEST_RESULTS_PATH} --dir_two ${TEST_CASE_ROOT}/out_5 --bin_dir ${DCMTK_DIR}/bin --diff_opts ${DIFF_OPT_DCM_STR} )
SET_TESTS_PROPERTIES(TEST_LINE_WIDTH_MET_MAP_DIFF PROPERTIES DEPENDS TEST_MCHK_LINE_WIDTH_MET_MAP)


########################
#   Metabolite Map Generation
########################
SET( TEST_NAME TEST_MCHK_MAG_LINE_WIDTH_MET_MAP)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/met_maps/integration_pk_ht)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_quantify -i ${TEST_CASE_ROOT}/input/mrs.ddf -o ${TEST_RESULTS_PATH}/out -t 6 --peak_center 1.99 --peak_width .4 --peak_name NAA --algo 6)

SET( TEST_NAME TEST_MAG_LINE_WIDTH_MET_MAP_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  perl ${TEST_SCRIPT_PATH}/dcm2xml_series_diff --diff ${DIFF_COMMAND} --dir_one ${TEST_RESULTS_PATH} --dir_two ${TEST_CASE_ROOT}/out_6 --bin_dir ${DCMTK_DIR}/bin --diff_opts ${DIFF_OPT_DCM_STR} )
SET_TESTS_PROPERTIES(TEST_MAG_LINE_WIDTH_MET_MAP_DIFF PROPERTIES DEPENDS TEST_MCHK_MAG_LINE_WIDTH_MET_MAP)


########################
#   Metabolite Map Generation -xml including CNI
########################
SET( TEST_NAME TEST_MCHK_SVK_QUANTIFY_XML )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/svk_quantify )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_quantify -b -i ${TEST_CASE_ROOT}/input1/mrs.ddf -o ${TEST_RESULTS_PATH}/ -t6 --xml ${TEST_CASE_ROOT}/input1/SIVICQuantrc.xml )

SET( TEST_NAME TEST_SVK_QUANTIFY_XML_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  perl ${TEST_SCRIPT_PATH}/dcm2xml_series_diff --diff ${DIFF_COMMAND} --dir_one ${TEST_RESULTS_PATH} --dir_two ${TEST_CASE_ROOT}/${TEST_PLATFORM}/out1 --bin_dir ${DCMTK_DIR}/bin --diff_opts ${DIFF_OPT_DCM_STR} )
SET_TESTS_PROPERTIES( TEST_SVK_QUANTIFY_XML_DIFF PROPERTIES DEPENDS TEST_MCHK_SVK_QUANTIFY_XML )


########################
#   MRS FFT test: 
########################
SET( TEST_NAME TEST_MCHK_MRS_FFT )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/mrs_fft)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_TESTS}/svkMrsImageFFT ${TEST_CASE_ROOT}/input/raw.ddf ${TEST_RESULTS_PATH}/recon )

SET( TEST_NAME TEST_MRS_FFT_DIFF )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out )
SET_TESTS_PROPERTIES(TEST_MRS_FFT_DIFF PROPERTIES DEPENDS TEST_MCHK_MRS_FFT)

########################
#   MRI FFT test: 
########################
SET( TEST_NAME TEST_MCHK_EVEN_MRI_FFT )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/mri_fft)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_TESTS}/svkMriImageFFTTest ${TEST_CASE_ROOT}/input/testBoxEven.idf ${TEST_RESULTS_PATH} )

SET( TEST_NAME TEST_EVEN_MRI_FFT_DIFF )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out_even )
SET_TESTS_PROPERTIES(TEST_EVEN_MRI_FFT_DIFF PROPERTIES DEPENDS TEST_MCHK_EVEN_MRI_FFT)

########################
#   MRI FFT test: 
########################
SET( TEST_NAME TEST_MCHK_ODD_MRI_FFT )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/mri_fft)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_TESTS}/svkMriImageFFTTest ${TEST_CASE_ROOT}/input/testBoxOdd.idf ${TEST_RESULTS_PATH} )

SET( TEST_NAME TEST_ODD_MRI_FFT_DIFF )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out_odd )
SET_TESTS_PROPERTIES(TEST_ODD_MRI_FFT_DIFF PROPERTIES DEPENDS TEST_MCHK_ODD_MRI_FFT)

####################################################
#   Image center test for even image dimensions
####################################################
SET( TEST_NAME TEST_MCHK_EVEN_IMAGE_CENTER )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/image_center)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_TESTS}/svkImageFourierCenterTest ${TEST_CASE_ROOT}/input/constantEven.idf ${TEST_RESULTS_PATH} )

SET( TEST_NAME TEST_EVEN_IMAGE_CENTER_DIFF )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out_even )
SET_TESTS_PROPERTIES(TEST_EVEN_IMAGE_CENTER_DIFF PROPERTIES DEPENDS TEST_MCHK_EVEN_IMAGE_CENTER)

####################################################
#   Image center test for odd image dimensions
####################################################
SET( TEST_NAME TEST_MCHK_ODD_IMAGE_CENTER )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/image_center)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_TESTS}/svkImageFourierCenterTest ${TEST_CASE_ROOT}/input/constantOdd.idf ${TEST_RESULTS_PATH} )

SET( TEST_NAME TEST_ODD_IMAGE_CENTER_DIFF )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out_odd )
SET_TESTS_PROPERTIES(TEST_ODD_IMAGE_CENTER_DIFF PROPERTIES DEPENDS TEST_MCHK_ODD_IMAGE_CENTER)

########################
#   Image padding test: 
########################
SET( TEST_NAME TEST_MCHK_EVEN_IMAGE_PAD )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/image_pad)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_TESTS}/svkMriZeroFillTest ${TEST_CASE_ROOT}/input/testBoxCenterEven.idf ${TEST_RESULTS_PATH} )

SET( TEST_NAME TEST_EVEN_IMAGE_PAD_DIFF )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out_even )
SET_TESTS_PROPERTIES(TEST_EVEN_IMAGE_PAD_DIFF PROPERTIES DEPENDS TEST_MCHK_EVEN_IMAGE_PAD)

########################
#   Image padding test: 
########################
SET( TEST_NAME TEST_MCHK_ODD_IMAGE_PAD )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/image_pad)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_TESTS}/svkMriZeroFillTest ${TEST_CASE_ROOT}/input/testBoxCenterOdd.idf ${TEST_RESULTS_PATH} )

SET( TEST_NAME TEST_ODD_IMAGE_PAD_DIFF )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out_odd )
SET_TESTS_PROPERTIES(TEST_ODD_IMAGE_PAD_DIFF PROPERTIES DEPENDS TEST_MCHK_ODD_IMAGE_PAD)

########################
#   Spectra padding test: 
########################
SET( TEST_NAME TEST_MCHK_MRS_ZERO_FILL )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/mrs_zero_fill)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_TESTS}/svkMrsZeroFillTest ${SVK_TEST_ROOT}/mrs_zero_fill/input/delta.ddf ${TEST_RESULTS_PATH}/out )

SET( TEST_NAME TEST_MRS_ZERO_FILL_DIFF )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out )
SET_TESTS_PROPERTIES(TEST_MRS_ZERO_FILL_DIFF PROPERTIES DEPENDS TEST_MCHK_MRS_ZERO_FILL)

########################
#   voxel shifting: 
########################
SET( TEST_NAME TEST_MCHK_MRS_VOXEL_SHIFT )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/mrs_voxel_shift)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_TESTS}/svkMrsFFTVoxelShiftTest ${SVK_TEST_ROOT}/mrs_zero_fill/input/delta.ddf ${TEST_RESULTS_PATH}/out )

SET( TEST_NAME TEST_MRS_VOXEL_SHIFT_DIFF )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out )
SET_TESTS_PROPERTIES(TEST_MRS_VOXEL_SHIFT_DIFF PROPERTIES DEPENDS TEST_MCHK_MRS_VOXEL_SHIFT)


SET( TEST_NAME TEST_MRS_FFT_VOXEL_SHIFT )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/mrs_fft)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_fft -i ${TEST_CASE_ROOT}/input_2/svstest_1.ddf -o ${TEST_RESULTS_PATH}/out -t 2 --vsx .5 --vsy .5 )

SET( TEST_NAME TEST_MRS_FFT_VOXEL_SHIFT_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out_2 )
SET_TESTS_PROPERTIES( TEST_MRS_FFT_VOXEL_SHIFT_DIFF PROPERTIES DEPENDS TEST_MRS_FFT_VOXEL_SHIFT )

########################
#   Spectra phase test: 
########################
SET( TEST_NAME TEST_PHASE_SPEC )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/phase_spec)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_TESTS}/svkMrsLinearPhaseTest ${SVK_TEST_ROOT}/mrs_zero_fill/input/delta.ddf ${TEST_RESULTS_PATH}/out )

SET( TEST_NAME TEST_PHASE_SPEC_DIFF )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out )
SET_TESTS_PROPERTIES(TEST_PHASE_SPEC_DIFF PROPERTIES DEPENDS TEST_PHASE_SPEC )

##################################################################
#   Spectra zero and linear phase test in the spectral domain. 
##################################################################
SET( TEST_NAME TEST_MCHK_PHASE_ZERO_LINEAR_SPEC )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/phase_zero_linear_spec)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_phase_spec -i ${SVK_TEST_ROOT}/mrs_fft/out/recon.ddf -o ${TEST_RESULTS_PATH}/out -z 77 -l -227 -p 117 -t 2 )

SET( TEST_NAME TEST_PHASE_ZERO_LINEAR_SPEC_DIFF )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/${TEST_PLATFORM}/out )
SET_TESTS_PROPERTIES(TEST_PHASE_ZERO_LINEAR_SPEC_DIFF PROPERTIES DEPENDS TEST_MCHK_PHASE_ZERO_LINEAR_SPEC )


SET( TEST_NAME TEST_MCHK_PHASE_SPEC_FROM_FILE )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME}/out1 )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/svk_phase_spec)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_phase_spec -i ${TEST_CASE_ROOT}/input1/P12345_fft_2.ddf -o ${TEST_RESULTS_PATH}/phased --map0 ${TEST_CASE_ROOT}/input1/P12345_map.idf -t 2 )

SET( TEST_NAME TEST_PHASE_SPEC_FROM_FILE_DIFF )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/${TEST_PLATFORM}/out1 )
SET_TESTS_PROPERTIES(TEST_PHASE_SPEC_FROM_FILE_DIFF PROPERTIES DEPENDS TEST_MCHK_PHASE_SPEC_FROM_FILE )


##################################################################
#   Spectra zero and linear phase test in the spectral domain. 
##################################################################
SET( TEST_NAME TEST_MCHK_PHASE_ZERO_LINEAR_SPEC_2 )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/phase_zero_linear_spec)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_TESTS}/svkZeroLinearPhaseTest -i ${SVK_TEST_ROOT}/mrs_fft/out/recon.ddf -o ${TEST_RESULTS_PATH}/phase_changes )

SET( TEST_NAME TEST_PHASE_ZERO_LINEAR_SPEC_2_DIFF )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/${TEST_PLATFORM}/out_2 )
SET_TESTS_PROPERTIES(TEST_PHASE_ZERO_LINEAR_SPEC_2_DIFF PROPERTIES DEPENDS TEST_MCHK_PHASE_ZERO_LINEAR_SPEC_2 )


##############################
#   Image linear phase test: 
##############################
SET( TEST_NAME TEST_MCHK_EVEN_IMAGE_LINEAR_PHASE )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/image_linear_phase)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_TESTS}/svkImageLinearPhaseTest ${TEST_CASE_ROOT}/input/testBoxEven.idf ${TEST_RESULTS_PATH} )

SET( TEST_NAME TEST_EVEN_IMAGE_LINEAR_PHASE_DIFF )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out_even )
SET_TESTS_PROPERTIES(TEST_EVEN_IMAGE_LINEAR_PHASE_DIFF PROPERTIES DEPENDS TEST_MCHK_EVEN_IMAGE_LINEAR_PHASE)


##############################
#   Image linear phase test: 
##############################
SET( TEST_NAME TEST_MCHK_ODD_IMAGE_LINEAR_PHASE )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/image_linear_phase)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_TESTS}/svkImageLinearPhaseTest ${TEST_CASE_ROOT}/input/testBoxOdd.idf ${TEST_RESULTS_PATH} )

SET( TEST_NAME TEST_ODD_IMAGE_LINEAR_PHASE_DIFF )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out_odd )
SET_TESTS_PROPERTIES(TEST_ODD_IMAGE_LINEAR_PHASE_DIFF PROPERTIES DEPENDS TEST_MCHK_ODD_IMAGE_LINEAR_PHASE)


##############################
#   sinc interpolate test for even data set: 
##############################
SET( TEST_NAME TEST_MCHK_EVEN_SINC_INTERPOLATE )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/sinc_interpolate)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_TESTS}/svkSincInterpolateTest ${TEST_CASE_ROOT}/input/testBoxCenterEven.idf ${TEST_RESULTS_PATH} )

SET( TEST_NAME TEST_EVEN_SINC_INTERPOLATE_DIFF )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out_even )
SET_TESTS_PROPERTIES(TEST_EVEN_SINC_INTERPOLATE_DIFF PROPERTIES DEPENDS TEST_MCHK_EVEN_SINC_INTERPOLATE)

##############################
#   sinc interpolate test for odd data set: 
##############################
SET( TEST_NAME TEST_MCHK_ODD_SINC_INTERPOLATE )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/sinc_interpolate)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_TESTS}/svkSincInterpolateTest ${TEST_CASE_ROOT}/input/testBoxCenterOdd.idf ${TEST_RESULTS_PATH} )

SET( TEST_NAME TEST_ODD_SINC_INTERPOLATE_DIFF )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out_odd )
SET_TESTS_PROPERTIES(TEST_ODD_SINC_INTERPOLATE_DIFF PROPERTIES DEPENDS TEST_MCHK_ODD_SINC_INTERPOLATE)


########################
#   Data combining test: 
########################
SET( TEST_NAME TEST_MCHK_COMBINE )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/combining)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_TESTS}/svkMrsCombine ${TEST_CASE_ROOT}/input/phantom_8ch.dcm ${TEST_RESULTS_PATH}/out )

SET( TEST_NAME TEST_COMBINE_DIFF )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out )
SET_TESTS_PROPERTIES(TEST_COMBINE_DIFF PROPERTIES DEPENDS TEST_MCHK_COMBINE)


########################
#   Read Sym EPSI data test: 
########################
SET( TEST_NAME TEST_MCHK_READ_SYM_EPSI)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/sym_epsi)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_gepfile_reader -i ${TEST_CASE_ROOT}/input/c13_3d_raw -o ${TEST_RESULTS_PATH}/out -t2 --no_dc_correction )

SET( TEST_NAME TEST_READ_SYM_EPSI_DIFF )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/${TEST_PLATFORM}/out_nodc)
SET_TESTS_PROPERTIES(TEST_READ_SYM_EPSI_DIFF PROPERTIES DEPENDS TEST_MCHK_READ_SYM_EPSI)

########################
#   Read Sym EPSI Dynamic data test: 
########################
SET( TEST_NAME TEST_MCHK_READ_SYM_EPSI_DYNAMIC)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/sym_epsi_dynamic)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_gepfile_reader -i ${TEST_CASE_ROOT}/input/dyn01 -o ${TEST_RESULTS_PATH}/out -t2  --no_dc_correction)

SET( TEST_NAME TEST_READ_SYM_EPSI_DYNAMIC_DIFF )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/${TEST_PLATFORM}/out_nodc)
SET_TESTS_PROPERTIES(TEST_READ_SYM_EPSI_DYNAMIC_DIFF PROPERTIES DEPENDS TEST_MCHK_READ_SYM_EPSI_DYNAMIC)

########################
#   Read Prose_PROSTATE_UCSF pfile: 
########################
SET( TEST_NAME TEST_MCHK_READ_PROSE_UCSF )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/ge_pfiles/prose_prostate_ucsf )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_gepfile_reader -i ${TEST_CASE_ROOT}/input/pfile_24x -o ${TEST_RESULTS_PATH}/out -t2  --no_dc_correction)

SET( TEST_NAME TEST_READ_PROSE_UCSF_DIFF )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/${TEST_PLATFORM}/ )
SET_TESTS_PROPERTIES( TEST_READ_PROSE_UCSF_DIFF PROPERTIES DEPENDS TEST_MCHK_READ_PROSE_UCSF )


########################
#   Read GE .shf file (sdbm) test: 
########################
SET( TEST_NAME TEST_MCHK_READ_GE_SHF )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/ge_sdbm_files )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_file_convert -i ${TEST_CASE_ROOT}/input/test.shf -o ${TEST_RESULTS_PATH}/out -t2 )

SET( TEST_NAME TEST_READ_GE_SHF_DIFF )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/output )
SET_TESTS_PROPERTIES(TEST_READ_GE_SHF_DIFF PROPERTIES DEPENDS TEST_MCHK_READ_GE_SHF)


########################
#   Convert GE Postage Stamp file to DDF test:
########################
SET( TEST_NAME TEST_MCHK_GE_POSTAGE_TO_DDF)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/ge_postage_stamp)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_file_convert -i ${TEST_CASE_ROOT}/input/000001.DCM -o ${TEST_RESULTS_PATH}/out -t2 )

SET( TEST_NAME TEST_GE_POSTAGE_TO_DDF_DIFF )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/${TEST_PLATFORM}/output )
SET_TESTS_PROPERTIES(TEST_GE_POSTAGE_TO_DDF_DIFF PROPERTIES DEPENDS TEST_MCHK_GE_POSTAGE_TO_DDF)


########################
#   apodization tests: 
########################
SET( TEST_NAME TEST_MCHK_MRS_APODIZATION)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/mrs_apodization)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_TESTS}/svkMrsApodizationFilterTest  ${SVK_TEST_ROOT}/ge_pfiles/20x/input/20_x_raw ${TEST_RESULTS_PATH}/out )

SET( TEST_NAME TEST_MRS_APODIZATION_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/${TEST_PLATFORM}/out )
SET_TESTS_PROPERTIES(TEST_MRS_APODIZATION_DIFF PROPERTIES DEPENDS TEST_MCHK_MRS_APODIZATION)


SET( TEST_NAME TEST_MCHK_SVK_APODIZE)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/svk_apodize)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_apodize -i ${TEST_CASE_ROOT}/input/P12345_raw_1.ddf --single -t2 -f1 --width 4 -o ${TEST_RESULTS_PATH}/out )

SET( TEST_NAME TEST_SVK_APODIZE_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out )
SET_TESTS_PROPERTIES(TEST_SVK_APODIZE_DIFF PROPERTIES DEPENDS TEST_MCHK_SVK_APODIZE)

########################
#   svk_mrs_combine tests: 
########################
SET( TEST_NAME TEST_MCHK_SVK_MRS_COMBINE_WTD_ADD )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME}/out1)
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/svk_mrs_combine)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_mrs_combine -i ${TEST_CASE_ROOT}/input1/P12345_fft_phased_second_2.ddf -o ${TEST_RESULTS_PATH}/out -t2 -a4 --wts  ${TEST_CASE_ROOT}/input1/P12345_water_mag.dcm )

SET( TEST_NAME TEST_SVK_MRS_COMBINE_WTD_ADD_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/${TEST_PLATFORM}/out1 )
SET_TESTS_PROPERTIES(TEST_SVK_MRS_COMBINE_WTD_ADD_DIFF PROPERTIES DEPENDS TEST_MCHK_SVK_MRS_COMBINE_WTD_ADD )

SET( TEST_NAME TEST_MCHK_SVK_MRS_COMBINE_SUB)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME}/out2)
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/svk_mrs_combine)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_mrs_combine -i ${TEST_CASE_ROOT}/input2/P12345_fft_phased_comb1.ddf -o ${TEST_RESULTS_PATH}/out -t2 -a2 )

SET( TEST_NAME TEST_SVK_MRS_COMBINE_SUB_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out2 )
SET_TESTS_PROPERTIES(TEST_SVK_MRS_COMBINE_SUB_DIFF PROPERTIES DEPENDS TEST_MCHK_SVK_MRS_COMBINE_SUB)

########################
#   multi-volume DICIOM 2 IDF test: 
########################
SET( TEST_NAME TEST_MCHK_MULTI_VOL_DCM_2_IDF)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/multi_volume)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_file_convert -i ${TEST_CASE_ROOT}/input/E10755S2I1.DCM -o ${TEST_RESULTS_PATH}/out -t3 )

SET( TEST_NAME TEST_MULTI_VOL_DCM_2_IDF_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/output_dcm )
SET_TESTS_PROPERTIES(TEST_MULTI_VOL_DCM_2_IDF_DIFF PROPERTIES DEPENDS TEST_MCHK_MULTI_VOL_DCM_2_IDF)


########################
#   multi-volume IDF 2 IDF test: 
########################
SET( TEST_NAME TEST_MCHK_MULTI_VOL_IDF_2_IDF)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/multi_volume)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_file_convert -i ${TEST_CASE_ROOT}/input/vol_1.idf -o ${TEST_RESULTS_PATH}/out -t3 )

SET( TEST_NAME TEST_MULTI_VOL_IDF_2_IDF_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/output_idf )
SET_TESTS_PROPERTIES(TEST_MULTI_VOL_IDF_2_IDF_DIFF PROPERTIES DEPENDS TEST_MCHK_MULTI_VOL_IDF_2_IDF)

########################
#   multi-volume IDF 2 DICOM test: 
########################
SET( TEST_NAME TEST_MCHK_MULTI_VOL_IDF_2_DCM)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/multi_volume)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_file_convert -i ${TEST_CASE_ROOT}/input/vol_1.idf -o ${TEST_RESULTS_PATH}/out -t5 )

SET( TEST_NAME TEST_MULTI_VOL_IDF_2_DCM_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  perl ${TEST_SCRIPT_PATH}/dcm2xml_series_diff --diff ${DIFF_COMMAND} --dir_one ${TEST_RESULTS_PATH} --dir_two ${TEST_CASE_ROOT}/output_idf_to_dcm --bin_dir ${DCMTK_DIR}/bin --diff_opts ${DIFF_OPT_DCM_STR} )
SET_TESTS_PROPERTIES(TEST_MULTI_VOL_IDF_2_DCM_DIFF PROPERTIES DEPENDS TEST_MCHK_MULTI_VOL_IDF_2_DCM)

########################
#   multi-volume IDF 2 DICOM Enhanced test: 
########################
SET( TEST_NAME TEST_MCHK_MULTI_VOL_IDF_2_DCMENH)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/multi_volume)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_file_convert -i ${TEST_CASE_ROOT}/input/vol_1.idf -o ${TEST_RESULTS_PATH}/out -t6 )

SET( TEST_NAME TEST_MULTI_VOL_IDF_2_DCMENH_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  perl ${TEST_SCRIPT_PATH}/dcm2xml_series_diff --diff ${DIFF_COMMAND} --dir_one ${TEST_RESULTS_PATH} --dir_two ${TEST_CASE_ROOT}/output_idf_to_dcmenh --bin_dir ${DCMTK_DIR}/bin --diff_opts ${DIFF_OPT_DCM_STR} )
SET_TESTS_PROPERTIES(TEST_MULTI_VOL_IDF_2_DCMENH_DIFF PROPERTIES DEPENDS TEST_MCHK_MULTI_VOL_IDF_2_DCMENH)


########################
#   multi-volume DICOM Enhanced 2 DICOM Enhanced test: 
########################
SET( TEST_NAME TEST_MCHK_MULTI_VOL_DCMENH_2_DCMENH)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/multi_volume)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_file_convert -i ${TEST_CASE_ROOT}/input/enh.dcm -o ${TEST_RESULTS_PATH}/out -t6 )

SET( TEST_NAME TEST_MULTI_VOL_DCMENH_2_DCMENH_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  perl ${TEST_SCRIPT_PATH}/dcm2xml_series_diff --diff ${DIFF_COMMAND} --dir_one ${TEST_RESULTS_PATH} --dir_two ${TEST_CASE_ROOT}/output_dcmenh_to_dcmenh --bin_dir ${DCMTK_DIR}/bin --diff_opts ${DIFF_OPT_DCM_STR} )
SET_TESTS_PROPERTIES(TEST_MULTI_VOL_DCMENH_2_DCMENH_DIFF PROPERTIES DEPENDS TEST_MCHK_MULTI_VOL_DCMENH_2_DCMENH)

########################
#   multi-volume DICOM Enhanced 2 DICOM Enhanced test: 
########################
SET( TEST_NAME TEST_MCHK_FLOAT_DCMENH_2_DCMENH)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/enhanced_dicom)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_file_convert -i ${TEST_CASE_ROOT}/input/float.dcm -o ${TEST_RESULTS_PATH}/out -t6 )

SET( TEST_NAME TEST_FLOAT_DCMENH_2_DCMENH_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  perl ${TEST_SCRIPT_PATH}/dcm2xml_series_diff --diff ${DIFF_COMMAND} --dir_one ${TEST_RESULTS_PATH} --dir_two ${TEST_CASE_ROOT}/${TEST_PLATFORM}/output_float --bin_dir ${DCMTK_DIR}/bin --diff_opts ${DIFF_OPT_DCM_STR} )
SET_TESTS_PROPERTIES(TEST_FLOAT_DCMENH_2_DCMENH_DIFF PROPERTIES DEPENDS TEST_MCHK_FLOAT_DCMENH_2_DCMENH)

########################
#   multi-channel IDF 2 multi-timepoint DICOM Enhanced test: 
########################
SET( TEST_NAME TEST_MCHK_CHANNEL_TO_TIME)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/multi_volume)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_channel2time -i ${TEST_CASE_ROOT}/input/vol_1.idf -o ${TEST_RESULTS_PATH}/out )

SET( TEST_NAME TEST_CHANNEL_TO_TIME_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  perl ${TEST_SCRIPT_PATH}/dcm2xml_series_diff --diff ${DIFF_COMMAND} --dir_one ${TEST_RESULTS_PATH} --dir_two ${TEST_CASE_ROOT}/output_channel2time --bin_dir ${DCMTK_DIR}/bin --diff_opts ${DIFF_OPT_DCM_STR} )
SET_TESTS_PROPERTIES(TEST_CHANNEL_TO_TIME_DIFF PROPERTIES DEPENDS TEST_MCHK_CHANNEL_TO_TIME)

########################
#   Reorder flyback data
########################
SET( TEST_NAME TEST_MCHK_REORDER_FLYBACK)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/sample_epsi)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_reorder_epsi -i ${TEST_CASE_ROOT}/input/t4807_lac_1.ddf -o ${TEST_RESULTS_PATH}/out -t2 --lobes 712  --skip 7 --axis 3 --type 1)

SET( TEST_NAME TEST_REORDER_FLYBACK_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out)
SET_TESTS_PROPERTIES(TEST_REORDER_FLYBACK_DIFF PROPERTIES DEPENDS TEST_MCHK_REORDER_FLYBACK)

########################
#   Reorder interleaved EPSI data
########################
SET( TEST_NAME TEST_MCHK_REORDER_INTERLEAVED_EPSI)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/sample_epsi)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_gepfile_reader -i ${TEST_CASE_ROOT}/input_interleaved/t8000_2coil -o ${TEST_RESULTS_PATH}/out_interleaved -t2 --epsi_lobes 552 --epsi_skip 7 --epsi_axis 2 --epsi_type 3)

SET( TEST_NAME TEST_REORDER_INTERLEAVED_EPSI_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/${TEST_PLATFORM}/out_interleaved)
SET_TESTS_PROPERTIES(TEST_REORDER_INTERLEAVED_EPSI_DIFF PROPERTIES DEPENDS TEST_MCHK_REORDER_INTERLEAVED_EPSI)

########################
#   DICOM raw writer: 
#   dcm file is created 
#   in same dir as raw file, thus the
#   link. 
########################
SET( TEST_NAME TEST_MCHK_DICOM_RAW_WRITER )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/raw_dicom )

ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_create_dcmraw -i ${TEST_RESULTS_PATH}/20_x_raw )

IF(WIN32)
    EXECUTE_PROCESS( COMMAND ${CMAKE_COMMAND} -E copy_if_different  ${SVK_TEST_ROOT}/raw_dicom/input/20_x_raw ${TEST_RESULTS_PATH}/20_x_raw  )
ELSE(WIN32)
    SET( TEST_RAW_RMLINK_COMMAND "/bin/rm" ) 
    SET( TEST_NAME_RMLINK TEST_RAW_RMLINK )
    ADD_CUSTOM_TARGET( ${TEST_NAME_RMLINK} ${TEST_RAW_RMLINK_COMMAND} -f ${TEST_RESULTS_PATH}/20_x_raw ) 

    SET( TEST_RAW_LINK_COMMAND "/bin/ln" ) 
    SET( TEST_NAME_LINK TEST_RAW_LINK )
    ADD_CUSTOM_TARGET( ${TEST_NAME_LINK} ALL ${TEST_RAW_LINK_COMMAND} -s ${SVK_TEST_ROOT}/raw_dicom/input/20_x_raw  ${TEST_RESULTS_PATH}/20_x_raw  ) 
    ADD_DEPENDENCIES(${TEST_NAME_LINK} ${TEST_NAME_RMLINK})
    ADD_DEPENDENCIES( ExperimentalBuild ${TEST_NAME_LINK})
    SET_TESTS_PROPERTIES(${TEST_NAME} PROPERTIES DEPENDS ${TEST_NAME_LINK})
ENDIF(WIN32)


SET( TEST_NAME TEST_DICOM_RAW_WRITER_DIFF)
ADD_TEST_WITH_TARGETS( ${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} ${TEST_RESULTS_PATH}/20_x_raw.dcm ${TEST_CASE_ROOT}/input/20_x_raw.dcm )
SET_TESTS_PROPERTIES(TEST_DICOM_RAW_WRITER_DIFF PROPERTIES DEPENDS TEST_MCHK_DICOM_RAW_WRITER)

########################
#   DICOM raw writer: 
#   dcm file is created 
#   in same dir as raw file, thus the
#   link. 
########################
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/TEST_MCHK_DICOM_RAW_WRITER_2 )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/raw_dicom )


IF(WIN32)
    EXECUTE_PROCESS( COMMAND ${CMAKE_COMMAND} -E copy_if_different   ${SVK_TEST_ROOT}/raw_dicom/input_2/P1  ${TEST_RESULTS_PATH}  )
    EXECUTE_PROCESS( COMMAND ${CMAKE_COMMAND} -E copy_if_different   ${SVK_TEST_ROOT}/raw_dicom/input_2/P1.dat  ${TEST_RESULTS_PATH}  )
    EXECUTE_PROCESS( COMMAND ${CMAKE_COMMAND} -E copy_if_different   ${SVK_TEST_ROOT}/raw_dicom/input_2/P1_press_box.dat  ${TEST_RESULTS_PATH}  )
    EXECUTE_PROCESS( COMMAND ${CMAKE_COMMAND} -E copy_if_different   ${SVK_TEST_ROOT}/raw_dicom/input_2/P1_sat_bands.dat  ${TEST_RESULTS_PATH}  )
	EXECUTE_PROCESS( COMMAND ${CMAKE_COMMAND} -E copy_if_different   ${SVK_TEST_ROOT}/raw_dicom/input_2/${TEST_PLATFORM}/P1.dcm  ${TEST_RESULTS_PATH}  )
ELSE(WIN32)
    SET( RAW_LINK_TARGET TEST_RAW_LINK_CMD )
    SET( TEST_RAW_LINK_COMMAND "${TEST_SCRIPT_PATH}/raw_links" ) 
    ADD_CUSTOM_TARGET( ${RAW_LINK_TARGET} ALL ${TEST_RAW_LINK_COMMAND} --src_dir ${SVK_TEST_ROOT}/raw_dicom/input_2/ --raw_root P1 --target_dir ${TEST_RESULTS_PATH}/ ) 
    ADD_DEPENDENCIES( ExperimentalBuild ${RAW_LINK_TARGET})
ENDIF(WIN32)

SET( TEST_NAME TEST_MCHK_DICOM_RAW_WRITER_2 )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_create_dcmraw -i ${TEST_RESULTS_PATH}/P1 -a ${TEST_RESULTS_PATH}/P1.dat -a ${TEST_RESULTS_PATH}/P1_press_box.dat -a ${TEST_RESULTS_PATH}/P1_sat_bands.dat )
SET_TESTS_PROPERTIES(TEST_MCHK_DICOM_RAW_WRITER_2 PROPERTIES DEPENDS TEST_RAW_LINK_CMD)

SET( TEST_NAME TEST_DICOM_RAW_WRITER_DIFF_2)
ADD_TEST_WITH_TARGETS( ${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} ${TEST_RESULTS_PATH}/P1.dcm ${TEST_CASE_ROOT}/input_2/${TEST_PLATFORM}/P1.dcm )
SET_TESTS_PROPERTIES(TEST_DICOM_RAW_WRITER_DIFF_2 PROPERTIES DEPENDS TEST_MCHK_DICOM_RAW_WRITER_2)

SET( TEST_NAME TEST_DICOM_RAW_WRITER_EXTRACT)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_create_dcmraw -i ${TEST_RESULTS_PATH}/P1.dcm -o ${TEST_RESULTS_PATH} -x )
SET_TESTS_PROPERTIES(TEST_DICOM_RAW_WRITER_EXTRACT PROPERTIES DEPENDS TEST_DICOM_RAW_WRITER_DIFF_2)

##############################
#   Legacy raw file extraction 
##############################
SET( TEST_NAME TEST_EXTRACT_RAW_LEGACY )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/raw_dicom/input_3)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_create_dcmraw -i ${TEST_CASE_ROOT}/input/t8344_acsi.dcm -o ${TEST_RESULTS_PATH}/ -x )

SET( TEST_NAME TEST_EXTRACT_RAW_LEGACY_DIFF )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH}/ ${TEST_CASE_ROOT}/output )
SET_TESTS_PROPERTIES( TEST_EXTRACT_RAW_LEGACY_DIFF PROPERTIES DEPENDS TEST_EXTRACT_RAW_LEGACY)



########################
#   HSVD test: 
########################
SET( TEST_NAME TEST_HSVD)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/hsvd )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_hsvd -i ${TEST_CASE_ROOT}/input/20x_1reconFREQ.ddf -o ${TEST_RESULTS_PATH}/hsvdout -t 2 --error 2 )

SET( TEST_NAME TEST_HSVD_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/output )
SET_TESTS_PROPERTIES(TEST_HSVD_DIFF PROPERTIES DEPENDS TEST_HSVD)



########################
#   HSVD Error Handling test: 
########################
SET( TEST_NAME TEST_ERRORHANDLING_HSVD)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/hsvd_errorhandle )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_hsvd -i ${TEST_CASE_ROOT}/input/20x_1reconFREQ.ddf -o ${TEST_RESULTS_PATH}/hsvdout -t 2 --error 1 )

SET( TEST_NAME TEST_ERRORHANDLING_HSVD_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/output )
SET_TESTS_PROPERTIES(TEST_ERRORHANDLING_HSVD_DIFF PROPERTIES DEPENDS TEST_ERRORHANDLING_HSVD)
if ( BUILD_ITK )
    ########################
    #   First Point Phase Test (-a1): 
    ########################
    SET( TEST_NAME TEST_FP_PHASE )
    SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
    FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
    file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
    SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/phase )
    ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_auto_phase -a1 -i ${TEST_CASE_ROOT}/input_fp/infp.ddf -o${TEST_RESULTS_PATH}/outfp -t 2 )

    SET( TEST_NAME TEST_FP_PHASE_DIFF)
    ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out_fp )
    SET_TESTS_PROPERTIES(TEST_FP_PHASE_DIFF PROPERTIES DEPENDS TEST_FP_PHASE)
endif ( BUILD_ITK )

########################
#   Bruker DICOM MRS Reader 
########################
SET( TEST_NAME TEST_BRUKER_2_DCM)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/bruker)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_file_convert -i ${TEST_CASE_ROOT}/input/MRIm0001 -o${TEST_RESULTS_PATH}/MRIm.dcm -t 4 )

SET( TEST_NAME TEST_BRUKER_2_DCMMRS_XML)
ADD_TEST_WITH_TARGETS(${TEST_NAME} ${DCM_2_XML_COMMAND} +M +Wb ${TEST_RESULTS_PATH}/MRIm.dcm ${TEST_RESULTS_PATH}/MRIm.xml ) 
SET_TESTS_PROPERTIES(TEST_BRUKER_2_DCMMRS_XML PROPERTIES DEPENDS TEST_BRUKER_2_DCM)

SET( TEST_NAME TEST_BRUKER_2_DCM_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT_DCM} -r ${TEST_RESULTS_PATH}/MRIm.xml ${TEST_CASE_ROOT}/output/MRIm.xml)
SET_TESTS_PROPERTIES(TEST_BRUKER_2_DCM_DIFF PROPERTIES DEPENDS TEST_BRUKER_2_DCMMRS_XML )


########################
#   svk_average_spec tests: 
########################
SET( TEST_NAME TEST_MCHK_SVK_MRS_AVERAGE_SPEC )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/svk_average_spec )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_average_spec -i ${TEST_CASE_ROOT}/input/dynamic_phased01.ddf -o ${TEST_RESULTS_PATH}/average --mask ${TEST_CASE_ROOT}/input/maskROI.idf )

SET( TEST_NAME TEST_SVK_MRS_AVERAGE_SPEC_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out )
SET_TESTS_PROPERTIES(TEST_SVK_MRS_AVERAGE_SPEC_DIFF PROPERTIES DEPENDS TEST_MCHK_SVK_MRS_AVERAGE_SPEC )


##############################
#   svk_image_threshold_test 
##############################
SET( TEST_NAME TEST_MCHK_SVK_IMAGE_THRESHOLD_1)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/svk_image_threshold)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_image_threshold -i ${SVK_TEST_ROOT}/DICOM/mri_phantom/input/E0000S4I1.DCM -o${TEST_RESULTS_PATH}/out -t 3 -l 1000 -b )

SET( TEST_NAME TEST_SVK_IMAGE_THRESHOLD_1_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out_1 )
SET_TESTS_PROPERTIES( TEST_SVK_IMAGE_THRESHOLD_1_DIFF PROPERTIES DEPENDS TEST_MCHK_SVK_IMAGE_THRESHOLD_1)


##############################
#   svk_image_threshold_test
##############################
SET( TEST_NAME TEST_MCHK_SVK_IMAGE_THRESHOLD_2)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/svk_image_threshold)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_image_threshold -i ${SVK_TEST_ROOT}/DICOM/mri_phantom/input/E0000S4I1.DCM -o${TEST_RESULTS_PATH}/out -t 3 -l 1000 )

SET( TEST_NAME TEST_SVK_IMAGE_THRESHOLD_2_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out_2 )
SET_TESTS_PROPERTIES( TEST_SVK_IMAGE_THRESHOLD_2_DIFF PROPERTIES DEPENDS TEST_MCHK_SVK_IMAGE_THRESHOLD_2)

##############################
#   svk_image_threshold_test
##############################
SET( TEST_NAME TEST_MCHK_SVK_IMAGE_THRESHOLD_3)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/svk_image_threshold)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_image_threshold -i ${SVK_TEST_ROOT}/DICOM/mri_phantom/input/E0000S4I1.DCM -o${TEST_RESULTS_PATH}/out -t 5 -u 10000 -v 10 )

SET( TEST_NAME TEST_SVK_IMAGE_THRESHOLD_3_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  perl ${TEST_SCRIPT_PATH}/dcm2xml_series_diff --diff ${DIFF_COMMAND} --dir_one  ${TEST_RESULTS_PATH} --dir_two ${TEST_CASE_ROOT}/out_3  --bin_dir ${DCMTK_DIR}/bin --diff_opts ${DIFF_OPT_DCM_STR} )
SET_TESTS_PROPERTIES( TEST_SVK_IMAGE_THRESHOLD_3_DIFF PROPERTIES DEPENDS TEST_MCHK_SVK_IMAGE_THRESHOLD_3)

##############################
#   svk_image_threshold_test
##############################
SET( TEST_NAME TEST_MCHK_SVK_IMAGE_THRESHOLD_4)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/svk_image_threshold)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_image_threshold -i ${SVK_TEST_ROOT}/DICOM/mri_phantom/input/E0000S4I1.DCM -o${TEST_RESULTS_PATH}/out -t 6 -l 9999 -u 10000 -v 10 )

SET( TEST_NAME TEST_SVK_IMAGE_THRESHOLD_4_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  perl ${TEST_SCRIPT_PATH}/dcm2xml_series_diff --diff ${DIFF_COMMAND} --dir_one  ${TEST_RESULTS_PATH} --dir_two ${TEST_CASE_ROOT}/out_4  --bin_dir ${DCMTK_DIR}/bin --diff_opts ${DIFF_OPT_DCM_STR} )
SET_TESTS_PROPERTIES( TEST_SVK_IMAGE_THRESHOLD_4_DIFF PROPERTIES DEPENDS TEST_MCHK_SVK_IMAGE_THRESHOLD_4)

##############################
#   svk_interpolate_spectra x
##############################
SET( TEST_NAME TEST_MCHK_SVK_INTERPOLATE_SPECTRA_1)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/svk_interpolate_spectra)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_interpolate_spectra -r -i ${SVK_TEST_ROOT}/overlay_validation/ddf_idf_mets/input/spec.ddf -o${TEST_RESULTS_PATH}/out -t 2 -l 29.78739 -p -48.457 -s -6.22
 )

SET( TEST_NAME TEST_SVK_INTERPOLATE_SPECTRA_1_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out1/${TEST_PLATFORM} )
SET_TESTS_PROPERTIES( TEST_SVK_INTERPOLATE_SPECTRA_1_DIFF PROPERTIES DEPENDS TEST_MCHK_SVK_INTERPOLATE_SPECTRA_1)


##############################
#   svk_interpolate_spectra 3D
##############################
SET( TEST_NAME TEST_MCHK_SVK_INTERPOLATE_SPECTRA_2)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/svk_interpolate_spectra)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_interpolate_spectra -r -i ${SVK_TEST_ROOT}/overlay_validation/ddf_idf_mets/input/spec.ddf -o${TEST_RESULTS_PATH}/out -t 2 -l 29.78739 -p -43.457 -s  -11.2195
 )

SET( TEST_NAME TEST_SVK_INTERPOLATE_SPECTRA_2_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out2 )
SET_TESTS_PROPERTIES( TEST_SVK_INTERPOLATE_SPECTRA_2_DIFF PROPERTIES DEPENDS TEST_MCHK_SVK_INTERPOLATE_SPECTRA_2)


##############################
#   svk_interpolate_spectra to single voxel
##############################
SET( TEST_NAME TEST_MCHK_SVK_INTERPOLATE_SPECTRA_3)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/svk_interpolate_spectra)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_interpolate_spectra -i ${SVK_TEST_ROOT}/overlay_validation/ddf_idf_mets/input/spec.ddf -o${TEST_RESULTS_PATH}/out -t 2 -l 29.78739 -p -48.457 -s -6.22
 )

SET( TEST_NAME TEST_SVK_INTERPOLATE_SPECTRA_3_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out3/${TEST_PLATFORM} )
SET_TESTS_PROPERTIES( TEST_SVK_INTERPOLATE_SPECTRA_3_DIFF PROPERTIES DEPENDS TEST_MCHK_SVK_INTERPOLATE_SPECTRA_3)



##############################
#   svk_interpolate_spectra to single voxel
##############################
SET( TEST_NAME TEST_MCHK_SVK_INTERPOLATE_SPECTRA_4)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/svk_interpolate_spectra)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_interpolate_spectra -r -i ${SVK_TEST_ROOT}/combining/input/phantom_8ch.dcm -o${TEST_RESULTS_PATH}/out -t 2 -l 29.78739 -p -48.457 -s -6.22
 )

SET( TEST_NAME TEST_SVK_INTERPOLATE_SPECTRA_4_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out4/${TEST_PLATFORM} )
SET_TESTS_PROPERTIES( TEST_SVK_INTERPOLATE_SPECTRA_4_DIFF PROPERTIES DEPENDS TEST_MCHK_SVK_INTERPOLATE_SPECTRA_4)

IF(NOT WIN32)
    ##############################
    #   Read xml for auto sats 1
    ##############################
    SET( TEST_NAME TEST_MCHK_SVK_SAT_BANDS_XML_1)
    SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
    FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
    file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
    SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/auto_sats)
    ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_TESTS}/svkSatBandsXML_c ${TEST_CASE_ROOT}/input1/auto_sats.xml ${TEST_RESULTS_PATH}/auto_sats.txt )

    SET( TEST_NAME TEST_SVK_SAT_BANDS_XML_DIFF_1)
    ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out1 )
    SET_TESTS_PROPERTIES( TEST_SVK_SAT_BANDS_XML_DIFF_1 PROPERTIES DEPENDS TEST_MCHK_SVK_SAT_BANDS_XML_1)


    ##############################
    #   Read xml for auto sats 2
    ##############################
    SET( TEST_NAME TEST_MCHK_SVK_SAT_BANDS_XML_2)
    SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
    FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
    file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
    SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/auto_sats)
    ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_TESTS}/svkSatBandsXML_c ${TEST_CASE_ROOT}/input2/auto_sats.xml ${TEST_RESULTS_PATH}/auto_sats.txt )

    SET( TEST_NAME TEST_SVK_SAT_BANDS_XML_DIFF_2)
    ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out2 )
    SET_TESTS_PROPERTIES( TEST_SVK_SAT_BANDS_XML_DIFF_2 PROPERTIES DEPENDS TEST_MCHK_SVK_SAT_BANDS_XML_2)

    ##############################
    #   Read and print sat information from dad file
    ##############################
    SET( TEST_NAME TEST_MCHK_SVK_DAD_SATS_XML)
    SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
    FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
    file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
    SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/dad_files)
    ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_TESTS}/svkDadSatsXMLTest_c ${TEST_CASE_ROOT}/input1/dad_auto_sats.xml ${TEST_RESULTS_PATH}/dad_auto_sats.txt )

    SET( TEST_NAME TEST_SVK_DAD_SATS_XML_DIFF)
    ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out1 )
    SET_TESTS_PROPERTIES( TEST_SVK_DAD_SATS_XML_DIFF PROPERTIES DEPENDS TEST_MCHK_SVK_DAD_SATS_XML)

    ##############################
    #   Create and write a dad file
    ##############################
    SET( TEST_NAME TEST_MCHK_SVK_DAD_TRAJECTORY_XML)
    SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
    FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
    file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
    SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/dad_files)
    ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_TESTS}/svkDadTrajectoryXMLTest_c ${TEST_RESULTS_PATH}/dad.xml )

    SET( TEST_NAME TEST_SVK_DAD_TRAJECTORY_XML_DIFF)
    ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out_trajectory )
    SET_TESTS_PROPERTIES( TEST_SVK_DAD_TRAJECTORY_XML_DIFF PROPERTIES DEPENDS TEST_MCHK_SVK_DAD_TRAJECTORY_XML)


ENDIF(NOT WIN32)

##############################
#   Parse XML in pfile reader: 
##############################
SET( TEST_NAME TEST_MCHK_SVK_PARSE_XML_PFILE_1)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/auto_sats)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_gepfile_reader -i ${TEST_CASE_ROOT}/input3/P29184 -o ${TEST_RESULTS_PATH}/fromxml -t2 --single )

SET( TEST_NAME TEST_SVK_PARSE_XML_PFILE_DIFF_1)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} ${TEST_RESULTS_PATH}/fromxml_1.ddf ${TEST_CASE_ROOT}/out3/fromxml_1.ddf )
SET_TESTS_PROPERTIES( TEST_SVK_PARSE_XML_PFILE_DIFF_1 PROPERTIES DEPENDS TEST_MCHK_SVK_PARSE_XML_PFILE_1)

##############################
#   Parse legacy .dat versin of 
#   XML in pfile reader: 
##############################
SET( TEST_NAME TEST_MCHK_SVK_PARSE_XML_PFILE_2)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/auto_sats)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_gepfile_reader -i ${TEST_CASE_ROOT}/input4/P123 -o ${TEST_RESULTS_PATH}/fromdat -t2 --single )

SET( TEST_NAME TEST_SVK_PARSE_XML_PFILE_DIFF_2)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} ${TEST_RESULTS_PATH}/fromdat_1.ddf ${TEST_CASE_ROOT}/out4/fromdat_1.ddf )
SET_TESTS_PROPERTIES( TEST_SVK_PARSE_XML_PFILE_DIFF_2 PROPERTIES DEPENDS TEST_MCHK_SVK_PARSE_XML_PFILE_2)

##############################
#   Convert legacy dat files to XML
#   XML in pfile reader: 
##############################
SET( TEST_NAME TEST_MCHK_SVK_CONVERT_LEGACY_DAT_6PLANE )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/auto_sats)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_psd_prescription_convert -i ${TEST_CASE_ROOT}/input5/P123 -o ${TEST_RESULTS_PATH}/P456 -x 1)

SET( TEST_NAME TEST_SVK_CONVERT_LEGACY_DAT_6PLANE_DIFF )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out5 )
SET_TESTS_PROPERTIES( TEST_SVK_CONVERT_LEGACY_DAT_6PLANE_DIFF PROPERTIES DEPENDS TEST_MCHK_SVK_CONVERT_LEGACY_DAT_6PLANE)


SET( TEST_NAME TEST_MCHK_SVK_CONVERT_LEGACY_DAT_3PLANE )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/auto_sats)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_psd_prescription_convert -i ${TEST_CASE_ROOT}/input7/P123 -o ${TEST_RESULTS_PATH}/P456 -x 2)

SET( TEST_NAME TEST_SVK_CONVERT_LEGACY_DAT_3PLANE_DIFF )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/out7 )
SET_TESTS_PROPERTIES( TEST_SVK_CONVERT_LEGACY_DAT_3PLANE_DIFF PROPERTIES DEPENDS TEST_MCHK_SVK_CONVERT_LEGACY_DAT_3PLANE)


##############################
#   Convert legacy dat files to XML
#   XML in pfile reader: 
##############################
SET( TEST_NAME TEST_MCHK_ALL_SATS )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/auto_sats)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_gepfile_reader -i ${TEST_CASE_ROOT}/input6/t9278 -o ${TEST_RESULTS_PATH}/all_sats -t2 )

SET( TEST_NAME TEST_ALL_SATS_DIFF )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH}/all_sats_1.ddf ${TEST_CASE_ROOT}/out6/${TEST_PLATFORM}/all_sats_1.ddf )
SET_TESTS_PROPERTIES( TEST_ALL_SATS_DIFF PROPERTIES DEPENDS TEST_MCHK_ALL_SATS )

##############################
#  svk_dce_quantify basic fit tests
##############################
SET( TEST_NAME TEST_MCHK_DCE_QUANTIFY )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/svk_dce_quantify )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_dce_quantify -i ${TEST_CASE_ROOT}/input/dce_dcm/E3129S1009I100.DCM -o ${TEST_RESULTS_PATH}/dce_quantify_out -t3 )

SET( TEST_NAME TEST_DCE_BASE_HT_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH}/dce_quantify_out_dce_base_ht.int2 ${TEST_CASE_ROOT}/output/baseline/baseline.int2 )
SET_TESTS_PROPERTIES(TEST_DCE_BASE_HT_DIFF PROPERTIES DEPENDS TEST_MCHK_DCE_QUANTIFY)

SET( TEST_NAME TEST_DCE_PK_HT_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH}/dce_quantify_out_dce_peak_ht.int2 ${TEST_CASE_ROOT}/output/peak/peak_height.int2 )
SET_TESTS_PROPERTIES(TEST_DCE_PK_HT_DIFF PROPERTIES DEPENDS TEST_MCHK_DCE_QUANTIFY)

SET( TEST_NAME TEST_DCE_PK_TM_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH}/dce_quantify_out_dce_peak_time.int2 ${TEST_CASE_ROOT}/output/time/peak_time.int2 )
SET_TESTS_PROPERTIES(TEST_DCE_PK_TM_DIFF PROPERTIES DEPENDS TEST_MCHK_DCE_QUANTIFY)

SET( TEST_NAME TEST_DCE_UP_SLOPE_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH}/dce_quantify_out_dce_up_slope.int2 ${TEST_CASE_ROOT}/output/slope/up_slope.int2 )
SET_TESTS_PROPERTIES(TEST_DCE_UP_SLOPE_DIFF PROPERTIES DEPENDS TEST_MCHK_DCE_QUANTIFY)

SET( TEST_NAME TEST_DCE_WASHOUT_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH}/dce_quantify_out_dce_washout.real ${TEST_CASE_ROOT}/output/washout/washout.real )
SET_TESTS_PROPERTIES(TEST_DCE_WASHOUT_DIFF PROPERTIES DEPENDS TEST_MCHK_DCE_QUANTIFY)


##############################
#  svk_transform test
##############################
SET( TEST_NAME TEST_MCHK_TRANSFORM )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/svk_transform )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_transform -i ${TEST_CASE_ROOT}/input/tjunk_div_obl.idf -o ${TEST_RESULTS_PATH}/shifted -t3 --dl 20 --dp 20 )

SET( TEST_NAME TEST_TRANSFORM_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH}/shifted.idf ${TEST_CASE_ROOT}/out/shifted.idf )
SET_TESTS_PROPERTIES(TEST_TRANSFORM_DIFF PROPERTIES DEPENDS TEST_MCHK_TRANSFORM)


##############################
#  svk_spec_diff test
##############################
SET( TEST_NAME TEST_MCHK_SPEC_DIFF )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/svk_spec_diff )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_spec_diff --s1 ${TEST_CASE_ROOT}/input/fit.dcm --s2 ${TEST_CASE_ROOT}/input/phased.dcm -o ${TEST_RESULTS_PATH}/diff -t2 )

SET( TEST_NAME TEST_SPEC_DIFF_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH}/ ${TEST_CASE_ROOT}/output/ )
SET_TESTS_PROPERTIES(TEST_SPEC_DIFF_DIFF PROPERTIES DEPENDS TEST_MCHK_SPEC_DIFF )

##############################
#  svk_file_convert info test
##############################
SET( TEST_NAME TEST_MCHK_SVK_FILE_INFO )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/svk_file_convert)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_file_convert --info -i ${TEST_CASE_ROOT}/input/vol.idf -o ${TEST_RESULTS_PATH}/info.txt )

SET( TEST_NAME TEST_SVK_FILE_INFO_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH}/ ${TEST_CASE_ROOT}/output/ )
SET_TESTS_PROPERTIES(TEST_SVK_FILE_INFO_DIFF PROPERTIES DEPENDS TEST_MCHK_SVK_FILE_INFO)

##############################
#  svk_image_mathematics tests
##############################
SET( TEST_NAME TEST_MCHK_SVK_IMAGE_MATHEMATICS_ADD )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/svk_image_mathematics )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_image_mathematics --i1 ${TEST_CASE_ROOT}/input/integer.idf --i2 ${TEST_CASE_ROOT}/input/integer.idf -o ${TEST_RESULTS_PATH}/svk_image_mathematics_add -p 1 )

SET( TEST_NAME TEST_SVK_IMAGE_MATHEMATICS_ADD_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH}/svk_image_mathematics_add.int2 ${TEST_CASE_ROOT}/output/add/add.int2 )
SET_TESTS_PROPERTIES(TEST_SVK_IMAGE_MATHEMATICS_ADD_DIFF PROPERTIES DEPENDS TEST_MCHK_SVK_IMAGE_MATHEMATICS_ADD)

SET( TEST_NAME TEST_MCHK_SVK_IMAGE_MATHEMATICS_SUB )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/svk_image_mathematics )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_image_mathematics --i1 ${TEST_CASE_ROOT}/input/float.idf --i2 ${TEST_CASE_ROOT}/input/integer.idf -o ${TEST_RESULTS_PATH}/svk_image_mathematics_sub -p 2 )

SET( TEST_NAME TEST_SVK_IMAGE_MATHEMATICS_SUB_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH}/svk_image_mathematics_sub.real ${TEST_CASE_ROOT}/output/subtract/subtract.real )
SET_TESTS_PROPERTIES(TEST_SVK_IMAGE_MATHEMATICS_SUB_DIFF PROPERTIES DEPENDS TEST_MCHK_SVK_IMAGE_MATHEMATICS_SUB)

SET( TEST_NAME TEST_MCHK_SVK_IMAGE_MATHEMATICS_MUL )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/svk_image_mathematics )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_image_mathematics --i1 ${TEST_CASE_ROOT}/input/integer.idf --i2 ${TEST_CASE_ROOT}/input/integer.idf -o ${TEST_RESULTS_PATH}/svk_image_mathematics_mul -p 3 )

SET( TEST_NAME TEST_SVK_IMAGE_MATHEMATICS_MUL_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH}/svk_image_mathematics_mul.int2 ${TEST_CASE_ROOT}/output/multiply/multiply.int2 )
SET_TESTS_PROPERTIES(TEST_SVK_IMAGE_MATHEMATICS_MUL_DIFF PROPERTIES DEPENDS TEST_MCHK_SVK_IMAGE_MATHEMATICS_MUL)

SET( TEST_NAME TEST_MCHK_SVK_IMAGE_MATHEMATICS_DIV )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/svk_image_mathematics )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_image_mathematics --i1 ${TEST_CASE_ROOT}/input/float.idf --i2 ${TEST_CASE_ROOT}/input/integer.idf -o ${TEST_RESULTS_PATH}/svk_image_mathematics_div -p 4 )

SET( TEST_NAME TEST_SVK_IMAGE_MATHEMATICS_DIV_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH}/svk_image_mathematics_div.real ${TEST_CASE_ROOT}/output/divide/divide.real )
SET_TESTS_PROPERTIES(TEST_SVK_IMAGE_MATHEMATICS_DIV_DIFF PROPERTIES DEPENDS TEST_MCHK_SVK_IMAGE_MATHEMATICS_DIV)

SET( TEST_NAME TEST_MCHK_SVK_IMAGE_MATHEMATICS_SCL )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/svk_image_mathematics )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_image_mathematics --i1 ${TEST_CASE_ROOT}/input/integer.idf -o ${TEST_RESULTS_PATH}/svk_image_mathematics_scl -p 5 -s 1.5 --output_type 2)

SET( TEST_NAME TEST_SVK_IMAGE_MATHEMATICS_SCL_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH}/svk_image_mathematics_scl.real ${TEST_CASE_ROOT}/output/scale/scale.real )
SET_TESTS_PROPERTIES(TEST_SVK_IMAGE_MATHEMATICS_SCL_DIFF PROPERTIES DEPENDS TEST_MCHK_SVK_IMAGE_MATHEMATICS_SCL)

##############################
#   svk_file_convert load IDF 
#   check series description test
#   when multiple vols are present
#       - only open files with similar file names if the series descriptions match
##############################
SET( TEST_NAME TEST_MCHK_SVK_CHECK_VOL_LOAD )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/file_reader )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_file_convert -i ${TEST_CASE_ROOT}/input/pc8215_E1869S3_div.idf -o ${TEST_RESULTS_PATH}/out -t3 )

SET( TEST_NAME TEST_MCHK_SVK_CHECK_VOL_LOAD_DIFF )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH}/ ${TEST_CASE_ROOT}/output/ )
SET_TESTS_PROPERTIES(TEST_MCHK_SVK_CHECK_VOL_LOAD_DIFF PROPERTIES DEPENDS TEST_MCHK_SVK_CHECK_VOL_LOAD)

##############################
#
# Test for variable flip angle correction
#
#############################
SET( TEST_NAME TEST_MCHK_SVK_VARIABLE_FLIP_SCALAR )
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/variable_flip_angle )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_variable_flip_scaler -i ${TEST_CASE_ROOT}/input/input.ddf -o ${TEST_RESULTS_PATH}/out -t2 --dad  ${TEST_CASE_ROOT}/input/profile.dat )

SET( TEST_NAME TEST_SVK_VARIABLE_FLIP_SCALAR_DIFF )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH}/ ${TEST_CASE_ROOT}/output/ )
SET_TESTS_PROPERTIES(TEST_SVK_VARIABLE_FLIP_SCALAR_DIFF PROPERTIES DEPENDS TEST_MCHK_SVK_VARIABLE_FLIP_SCALAR)


##############################
#
# LCModel Reader tests
#
##############################
#   lcmodel .coord reader
SET( TEST_NAME TEST_MCHK_READ_LCM_COORD)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/svk_lcmodel_reader/ )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_lcmodel_reader --coord ${TEST_CASE_ROOT}/input/t8002_lcm_1412_c8_r13_s4_sl4_13-8.coord -o ${TEST_RESULTS_PATH}/t8002_lcm -i ${TEST_CASE_ROOT}/input/t8002.ddf )

SET( TEST_NAME TEST_LCM_COORD_2_XML)
ADD_TEST_WITH_TARGETS(${TEST_NAME} ${DCM_2_XML_COMMAND} +M +Wb ${TEST_RESULTS_PATH}/t8002_lcm_LCM_fit.dcm ${TEST_RESULTS_PATH}/fit.xml ) 
SET_TESTS_PROPERTIES(TEST_LCM_COORD_2_XML PROPERTIES DEPENDS TEST_MCHK_READ_LCM_COORD )

SET( TEST_NAME TEST_LCM_COORD_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME} ${DIFF_COMMAND} ${DIFF_OPT_DCM} -r ${TEST_RESULTS_PATH}/fit.xml ${TEST_CASE_ROOT}/output/fit.xml )
SET_TESTS_PROPERTIES(TEST_LCM_COORD_DIFF PROPERTIES DEPENDS TEST_LCM_COORD_2_XML)

#   lcmodel .csv reader
SET( TEST_NAME TEST_MCHK_READ_LCM_CSV)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/svk_lcmodel_reader/ )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_lcmodel_reader --csv ${TEST_CASE_ROOT}/input/t8002_lcm_1412_c8_r13_s4.csv --met NAA -o ${TEST_RESULTS_PATH}/naa -i ${TEST_CASE_ROOT}/input/t8002.ddf)

SET( TEST_NAME TEST_LCM_CSV_2_XML)
ADD_TEST_WITH_TARGETS(${TEST_NAME} ${DCM_2_XML_COMMAND} +M +Wb ${TEST_RESULTS_PATH}/naa.dcm ${TEST_RESULTS_PATH}/naa.xml ) 
SET_TESTS_PROPERTIES(TEST_LCM_CSV_2_XML PROPERTIES DEPENDS TEST_MCHK_READ_LCM_CSV)

SET( TEST_NAME TEST_LCM_CSV_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME} ${DIFF_COMMAND} ${DIFF_OPT_DCM} -r ${TEST_RESULTS_PATH}/naa.xml ${TEST_CASE_ROOT}/output/naa.xml )
SET_TESTS_PROPERTIES(TEST_LCM_CSV_DIFF PROPERTIES DEPENDS TEST_LCM_CSV_2_XML)


#   lcmodel .table reader
SET( TEST_NAME TEST_MCHK_READ_LCM_TABLE)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME})
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/svk_lcmodel_reader/ )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_lcmodel_reader --csv ${TEST_CASE_ROOT}/input/t8002_lcm_1412_c8_r13_s4_sl4_13-8.table --met Ph -o ${TEST_RESULTS_PATH}/ph -i ${TEST_CASE_ROOT}/input/t8002.ddf)

SET( TEST_NAME TEST_LCM_TABLE_2_XML)
ADD_TEST_WITH_TARGETS(${TEST_NAME} ${DCM_2_XML_COMMAND} +M +Wb ${TEST_RESULTS_PATH}/ph.dcm ${TEST_RESULTS_PATH}/ph.xml ) 
SET_TESTS_PROPERTIES(TEST_LCM_TABLE_2_XML PROPERTIES DEPENDS TEST_MCHK_READ_LCM_TABLE)

SET( TEST_NAME TEST_LCM_TABLE_DIFF)
ADD_TEST_WITH_TARGETS(${TEST_NAME} ${DIFF_COMMAND} ${DIFF_OPT_DCM} -r ${TEST_RESULTS_PATH}/ph.xml ${TEST_CASE_ROOT}/output/ph.xml )
SET_TESTS_PROPERTIES(TEST_LCM_TABLE_DIFF PROPERTIES DEPENDS TEST_LCM_TABLE_2_XML)


########################
#   Convert Philips spectro "S" files to DDF test:
########################
SET( TEST_NAME TEST_MCHK_PHILIPS_SFILES_TO_DDF)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/philips_sdata)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_file_convert -i ${TEST_CASE_ROOT}/input/c13_csifid.SPAR -o ${TEST_RESULTS_PATH}/out -t2 )

SET( TEST_NAME TEST_PHILIPS_SFILES_TO_DDF_DIFF )
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${DIFF_COMMAND} ${DIFF_OPT} -r ${TEST_RESULTS_PATH} ${TEST_CASE_ROOT}/output )
SET_TESTS_PROPERTIES(TEST_PHILIPS_SFILES_TO_DDF_DIFF PROPERTIES DEPENDS TEST_MCHK_PHILIPS_SFILES_TO_DDF)


########################
#   Metabolite kinetic modeling:
#   model 1 (Christine simplified 2 site kinetics)
########################
SET( TEST_NAME TEST_MCHK_KIN_MOD1)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/svk_met_kinetics/hmtrc_2016/)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_met_kinetics --i1 ${TEST_CASE_ROOT}/input/ratPYRUVATE_MAG_PEAK_HT.dcm --i2 ${TEST_CASE_ROOT}/input/ratLACTATE_MAG_PEAK_HT.dcm --mask ${TEST_CASE_ROOT}/input/RAT_MASK.dcm -o ${TEST_RESULTS_PATH}/out -t6  --tr 3 --model 1)

SET( TEST_NAME TEST_KIN_MOD1_2_XML_0)
ADD_TEST_WITH_TARGETS(    ${TEST_NAME} ${DCM_2_XML_COMMAND} +M +Wb ${TEST_RESULTS_PATH}/out_pyr_fit.dcm ${TEST_RESULTS_PATH}/out_pyr_fit.xml ) 
SET_TESTS_PROPERTIES(TEST_KIN_MOD1_2_XML_0 PROPERTIES DEPENDS TEST_MCHK_KIN_MOD1)
SET( TEST_NAME TEST_KIN_MOD1_2_XML_1)
ADD_TEST_WITH_TARGETS(    ${TEST_NAME} ${DCM_2_XML_COMMAND} +M +Wb ${TEST_RESULTS_PATH}/out_lac_fit.dcm  ${TEST_RESULTS_PATH}/out_lac_fit.xml ) 
SET_TESTS_PROPERTIES(TEST_KIN_MOD1_2_XML_1 PROPERTIES DEPENDS TEST_MCHK_KIN_MOD1)
SET( TEST_NAME TEST_KIN_MOD1_2_XML_2)
ADD_TEST_WITH_TARGETS(    ${TEST_NAME} ${DCM_2_XML_COMMAND} +M +Wb ${TEST_RESULTS_PATH}/out_T1all.dcm    ${TEST_RESULTS_PATH}/out_T1all.xml   ) 
SET_TESTS_PROPERTIES(TEST_KIN_MOD1_2_XML_2 PROPERTIES DEPENDS TEST_MCHK_KIN_MOD1)
SET( TEST_NAME TEST_KIN_MOD1_2_XML_3)
ADD_TEST_WITH_TARGETS(    ${TEST_NAME} ${DCM_2_XML_COMMAND} +M +Wb ${TEST_RESULTS_PATH}/out_Kpl.dcm      ${TEST_RESULTS_PATH}/out_Kpl.xml     ) 
SET_TESTS_PROPERTIES(TEST_KIN_MOD1_2_XML_3 PROPERTIES DEPENDS TEST_MCHK_KIN_MOD1)
SET( TEST_NAME TEST_KIN_MOD1_2_XML_4)
ADD_TEST_WITH_TARGETS(    ${TEST_NAME} ${DCM_2_XML_COMMAND} +M +Wb ${TEST_RESULTS_PATH}/out_dcoffset.dcm ${TEST_RESULTS_PATH}/out_dcoffset.xml) 
SET_TESTS_PROPERTIES(TEST_KIN_MOD1_2_XML_4 PROPERTIES DEPENDS TEST_MCHK_KIN_MOD1)

SET( TEST_NAME TEST_KIN_MOD1_DIFF_0)
ADD_TEST_WITH_TARGETS(    ${TEST_NAME} ${DIFF_COMMAND} ${DIFF_OPT_DCM} -r ${TEST_RESULTS_PATH}/out_pyr_fit.xml  ${TEST_CASE_ROOT}/output/out_pyr_fit.xml ) 
SET_TESTS_PROPERTIES(TEST_KIN_MOD1_DIFF_0 PROPERTIES DEPENDS TEST_KIN_MOD1_2_XML_0)
SET( TEST_NAME TEST_KIN_MOD1_DIFF_1)
ADD_TEST_WITH_TARGETS(    ${TEST_NAME} ${DIFF_COMMAND} ${DIFF_OPT_DCM} -r ${TEST_RESULTS_PATH}/out_lac_fit.xml  ${TEST_CASE_ROOT}/output/out_lac_fit.xml ) 
SET_TESTS_PROPERTIES(TEST_KIN_MOD1_DIFF_1 PROPERTIES DEPENDS TEST_KIN_MOD1_2_XML_1)
SET( TEST_NAME TEST_KIN_MOD1_DIFF_2)
ADD_TEST_WITH_TARGETS(    ${TEST_NAME} ${DIFF_COMMAND} ${DIFF_OPT_DCM} -r ${TEST_RESULTS_PATH}/out_T1all.xml    ${TEST_CASE_ROOT}/output/out_T1all.xml   ) 
SET_TESTS_PROPERTIES(TEST_KIN_MOD1_DIFF_2 PROPERTIES DEPENDS TEST_KIN_MOD1_2_XML_2)
SET( TEST_NAME TEST_KIN_MOD1_DIFF_3)
ADD_TEST_WITH_TARGETS(    ${TEST_NAME} ${DIFF_COMMAND} ${DIFF_OPT_DCM} -r ${TEST_RESULTS_PATH}/out_Kpl.xml      ${TEST_CASE_ROOT}/output/out_Kpl.xml     ) 
SET_TESTS_PROPERTIES(TEST_KIN_MOD1_DIFF_3 PROPERTIES DEPENDS TEST_KIN_MOD1_2_XML_3)
SET( TEST_NAME TEST_KIN_MOD1_DIFF_4)
ADD_TEST_WITH_TARGETS(    ${TEST_NAME} ${DIFF_COMMAND} ${DIFF_OPT_DCM} -r ${TEST_RESULTS_PATH}/out_dcoffset.xml ${TEST_CASE_ROOT}/output/out_dcoffset.xml) 
SET_TESTS_PROPERTIES(TEST_KIN_MOD1_DIFF_4 PROPERTIES DEPENDS TEST_KIN_MOD1_2_XML_4)



########################
#   Metabolite kinetic modeling:
#   model 3 (Zierhut piecewise 2 site kinetics)
########################
SET( TEST_NAME TEST_MCHK_KIN_MOD3)
SET( TEST_RESULTS_PATH ${TEST_RESULTS_ROOT}/${TEST_NAME} )
FILE( REMOVE_RECURSE ${TEST_RESULTS_PATH} )
file( MAKE_DIRECTORY ${TEST_RESULTS_PATH} )
SET( TEST_CASE_ROOT ${SVK_TEST_ROOT}/svk_met_kinetics/model3_IM/)
ADD_TEST_WITH_TARGETS(${TEST_NAME}  ${TEST_BIN_PATH_CMD_LINE}/svk_met_kinetics --i1 ${TEST_CASE_ROOT}/input/PYRUVATE_MAG_PEAK_HT.dcm --i2 ${TEST_CASE_ROOT}/input/LACTATE_MAG_PEAK_HT.dcm --mask ${TEST_CASE_ROOT}/input/mask.dcm -o ${TEST_RESULTS_PATH}/out -t6  --tr 3 --model 3)

SET( TEST_NAME TEST_KIN_MOD3_2_XML_0)
ADD_TEST_WITH_TARGETS(    ${TEST_NAME} ${DCM_2_XML_COMMAND} +M +Wb ${TEST_RESULTS_PATH}/out_pyr_fit.dcm   ${TEST_RESULTS_PATH}/out_pyr_fit.xml ) 
SET_TESTS_PROPERTIES(TEST_KIN_MOD3_2_XML_0 PROPERTIES DEPENDS TEST_MCHK_KIN_MOD3)
SET( TEST_NAME TEST_KIN_MOD3_2_XML_1)
ADD_TEST_WITH_TARGETS(    ${TEST_NAME} ${DCM_2_XML_COMMAND} +M +Wb ${TEST_RESULTS_PATH}/out_lac_fit.dcm   ${TEST_RESULTS_PATH}/out_lac_fit.xml ) 
SET_TESTS_PROPERTIES(TEST_KIN_MOD3_2_XML_1 PROPERTIES DEPENDS TEST_MCHK_KIN_MOD3)
SET( TEST_NAME TEST_KIN_MOD3_2_XML_2)
ADD_TEST_WITH_TARGETS(    ${TEST_NAME} ${DCM_2_XML_COMMAND} +M +Wb ${TEST_RESULTS_PATH}/out_Tarrival.dcm  ${TEST_RESULTS_PATH}/out_Tarrival.xml) 
SET_TESTS_PROPERTIES(TEST_KIN_MOD3_2_XML_2 PROPERTIES DEPENDS TEST_MCHK_KIN_MOD3)
SET( TEST_NAME TEST_KIN_MOD3_2_XML_3)
ADD_TEST_WITH_TARGETS(    ${TEST_NAME} ${DCM_2_XML_COMMAND} +M +Wb ${TEST_RESULTS_PATH}/out_Rinj.dcm      ${TEST_RESULTS_PATH}/out_Rinj.xml    ) 
SET_TESTS_PROPERTIES(TEST_KIN_MOD3_2_XML_3 PROPERTIES DEPENDS TEST_MCHK_KIN_MOD3)
SET( TEST_NAME TEST_KIN_MOD3_2_XML_4)
ADD_TEST_WITH_TARGETS(    ${TEST_NAME} ${DCM_2_XML_COMMAND} +M +Wb ${TEST_RESULTS_PATH}/out_Kpyr.dcm      ${TEST_RESULTS_PATH}/out_Kpyr.xml) 
SET_TESTS_PROPERTIES(TEST_KIN_MOD3_2_XML_4 PROPERTIES DEPENDS TEST_MCHK_KIN_MOD3)
SET( TEST_NAME TEST_KIN_MOD3_2_XML_5)
ADD_TEST_WITH_TARGETS(    ${TEST_NAME} ${DCM_2_XML_COMMAND} +M +Wb ${TEST_RESULTS_PATH}/out_Kpl.dcm       ${TEST_RESULTS_PATH}/out_Kpl.xml) 
SET_TESTS_PROPERTIES(TEST_KIN_MOD3_2_XML_5 PROPERTIES DEPENDS TEST_MCHK_KIN_MOD3)
SET( TEST_NAME TEST_KIN_MOD3_2_XML_6)
ADD_TEST_WITH_TARGETS(    ${TEST_NAME} ${DCM_2_XML_COMMAND} +M +Wb ${TEST_RESULTS_PATH}/out_Klac.dcm      ${TEST_RESULTS_PATH}/out_Klac.xml) 
SET_TESTS_PROPERTIES(TEST_KIN_MOD3_2_XML_6 PROPERTIES DEPENDS TEST_MCHK_KIN_MOD3)
SET( TEST_NAME TEST_KIN_MOD3_2_XML_7)
ADD_TEST_WITH_TARGETS(    ${TEST_NAME} ${DCM_2_XML_COMMAND} +M +Wb ${TEST_RESULTS_PATH}/out_dcoffset.dcm  ${TEST_RESULTS_PATH}/out_dcoffset.xml) 
SET_TESTS_PROPERTIES(TEST_KIN_MOD3_2_XML_7 PROPERTIES DEPENDS TEST_MCHK_KIN_MOD3)

SET( TEST_NAME TEST_KIN_MOD3_DIFF_0)
ADD_TEST_WITH_TARGETS(    ${TEST_NAME} ${DIFF_COMMAND} ${DIFF_OPT_DCM} -r ${TEST_RESULTS_PATH}/out_pyr_fit.xml  ${TEST_CASE_ROOT}/output/out_pyr_fit.xml ) 
SET_TESTS_PROPERTIES(TEST_KIN_MOD3_DIFF_0 PROPERTIES DEPENDS TEST_KIN_MOD3_2_XML_0)
SET( TEST_NAME TEST_KIN_MOD3_DIFF_1)
ADD_TEST_WITH_TARGETS(    ${TEST_NAME} ${DIFF_COMMAND} ${DIFF_OPT_DCM} -r ${TEST_RESULTS_PATH}/out_lac_fit.xml  ${TEST_CASE_ROOT}/output/out_lac_fit.xml ) 
SET_TESTS_PROPERTIES(TEST_KIN_MOD3_DIFF_1 PROPERTIES DEPENDS TEST_KIN_MOD3_2_XML_1)
SET( TEST_NAME TEST_KIN_MOD3_DIFF_2)
ADD_TEST_WITH_TARGETS(    ${TEST_NAME} ${DIFF_COMMAND} ${DIFF_OPT_DCM} -r ${TEST_RESULTS_PATH}/out_Tarrival.xml ${TEST_CASE_ROOT}/output/out_Tarrival.xml) 
SET_TESTS_PROPERTIES(TEST_KIN_MOD3_DIFF_2 PROPERTIES DEPENDS TEST_KIN_MOD3_2_XML_2)
SET( TEST_NAME TEST_KIN_MOD3_DIFF_3)
ADD_TEST_WITH_TARGETS(    ${TEST_NAME} ${DIFF_COMMAND} ${DIFF_OPT_DCM} -r ${TEST_RESULTS_PATH}/out_Rinj.xml     ${TEST_CASE_ROOT}/output/out_Rinj.xml    ) 
SET_TESTS_PROPERTIES(TEST_KIN_MOD3_DIFF_3 PROPERTIES DEPENDS TEST_KIN_MOD3_2_XML_3)
SET( TEST_NAME TEST_KIN_MOD3_DIFF_4)
ADD_TEST_WITH_TARGETS(    ${TEST_NAME} ${DIFF_COMMAND} ${DIFF_OPT_DCM} -r ${TEST_RESULTS_PATH}/out_Kpyr.xml     ${TEST_CASE_ROOT}/output/out_Kpyr.xml    ) 
SET_TESTS_PROPERTIES(TEST_KIN_MOD3_DIFF_4 PROPERTIES DEPENDS TEST_KIN_MOD3_2_XML_4)
SET( TEST_NAME TEST_KIN_MOD3_DIFF_5)
ADD_TEST_WITH_TARGETS(    ${TEST_NAME} ${DIFF_COMMAND} ${DIFF_OPT_DCM} -r ${TEST_RESULTS_PATH}/out_Kpl.xml      ${TEST_CASE_ROOT}/output/out_Kpl.xml     ) 
SET_TESTS_PROPERTIES(TEST_KIN_MOD3_DIFF_5 PROPERTIES DEPENDS TEST_KIN_MOD3_2_XML_4)
SET( TEST_NAME TEST_KIN_MOD3_DIFF_6)
ADD_TEST_WITH_TARGETS(    ${TEST_NAME} ${DIFF_COMMAND} ${DIFF_OPT_DCM} -r ${TEST_RESULTS_PATH}/out_Klac.xml     ${TEST_CASE_ROOT}/output/out_Klac.xml    ) 
SET_TESTS_PROPERTIES(TEST_KIN_MOD3_DIFF_6 PROPERTIES DEPENDS TEST_KIN_MOD3_2_XML_4)
SET( TEST_NAME TEST_KIN_MOD3_DIFF_7)
ADD_TEST_WITH_TARGETS(    ${TEST_NAME} ${DIFF_COMMAND} ${DIFF_OPT_DCM} -r ${TEST_RESULTS_PATH}/out_dcoffset.xml ${TEST_CASE_ROOT}/output/out_dcoffset.xml    ) 
SET_TESTS_PROPERTIES(TEST_KIN_MOD3_DIFF_7 PROPERTIES DEPENDS TEST_KIN_MOD3_2_XML_4)


